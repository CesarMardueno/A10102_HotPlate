
A10102_V1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000101c  000010b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000101c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800114  00800114  000010c4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001120  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000113c  00000000  00000000  0000124c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a62  00000000  00000000  00002388  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009e8  00000000  00000000  00002dea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  000037d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000573  00000000  00000000  0000398c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000682  00000000  00000000  00003eff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004581  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e1       	ldi	r30, 0x1C	; 28
     17e:	f0 e1       	ldi	r31, 0x10	; 16
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a4 31       	cpi	r26, 0x14	; 20
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a4 e1       	ldi	r26, 0x14	; 20
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a5 32       	cpi	r26, 0x25	; 37
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
     1a0:	0c 94 0c 08 	jmp	0x1018	; 0x1018 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <main>:



int main(void)
{	
	cli();
     1a8:	f8 94       	cli
	LCD_Init();
     1aa:	0e 94 ed 01 	call	0x3da	; 0x3da <LCD_Init>
	DDRC &= ~(( 1 << PORTC5) | ( 1 << PORTC4));
     1ae:	87 b1       	in	r24, 0x07	; 7
     1b0:	8f 7c       	andi	r24, 0xCF	; 207
     1b2:	87 b9       	out	0x07, r24	; 7
	PORTC |= (( 1 << PORTC5) | ( 1 << PORTC4));
     1b4:	88 b1       	in	r24, 0x08	; 8
     1b6:	80 63       	ori	r24, 0x30	; 48
     1b8:	88 b9       	out	0x08, r24	; 8
	TWI_init(100000);
     1ba:	60 ea       	ldi	r22, 0xA0	; 160
     1bc:	76 e8       	ldi	r23, 0x86	; 134
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	0e 94 0c 01 	call	0x218	; 0x218 <TWI_init>
	//LCD_Write_Instruction(LCD_DISPLAY_CONTROL | LCD_CURSOR_OFF | LCD_BLINK_OFF);
	sei();
     1c6:	78 94       	sei
	
	while (1)
	{
		int l = 8;
		//LCD_Set_Cursor(1,1);
		LCD_Printf("El numero es: %02d", l);
     1c8:	1f 92       	push	r1
     1ca:	88 e0       	ldi	r24, 0x08	; 8
     1cc:	8f 93       	push	r24
     1ce:	80 e0       	ldi	r24, 0x00	; 0
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	9f 93       	push	r25
     1d4:	8f 93       	push	r24
     1d6:	0e 94 4d 02 	call	0x49a	; 0x49a <LCD_Printf>
		PCF8574_Send_Data(0x27, 0xFF);
     1da:	6f ef       	ldi	r22, 0xFF	; 255
     1dc:	87 e2       	ldi	r24, 0x27	; 39
     1de:	0e 94 65 02 	call	0x4ca	; 0x4ca <PCF8574_Send_Data>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e2:	2f ef       	ldi	r18, 0xFF	; 255
     1e4:	87 ea       	ldi	r24, 0xA7	; 167
     1e6:	91 e6       	ldi	r25, 0x61	; 97
     1e8:	21 50       	subi	r18, 0x01	; 1
     1ea:	80 40       	sbci	r24, 0x00	; 0
     1ec:	90 40       	sbci	r25, 0x00	; 0
     1ee:	e1 f7       	brne	.-8      	; 0x1e8 <main+0x40>
     1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <main+0x4a>
     1f2:	00 00       	nop
		_delay_ms(2000);
		PCF8574_Send_Data(0x27, 0x00);
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	87 e2       	ldi	r24, 0x27	; 39
     1f8:	0e 94 65 02 	call	0x4ca	; 0x4ca <PCF8574_Send_Data>
     1fc:	2f ef       	ldi	r18, 0xFF	; 255
     1fe:	87 ea       	ldi	r24, 0xA7	; 167
     200:	91 e6       	ldi	r25, 0x61	; 97
     202:	21 50       	subi	r18, 0x01	; 1
     204:	80 40       	sbci	r24, 0x00	; 0
     206:	90 40       	sbci	r25, 0x00	; 0
     208:	e1 f7       	brne	.-8      	; 0x202 <main+0x5a>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x64>
     20c:	00 00       	nop
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	0f 90       	pop	r0
     214:	0f 90       	pop	r0
     216:	d8 cf       	rjmp	.-80     	; 0x1c8 <main+0x20>

00000218 <TWI_init>:
	if((TWSR & 0xF8) == TWI_RESTART)
	{
		return false;
	}
	return true;
}
     218:	9b 01       	movw	r18, r22
     21a:	ac 01       	movw	r20, r24
     21c:	e9 eb       	ldi	r30, 0xB9	; 185
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	80 81       	ld	r24, Z
     222:	8e 7f       	andi	r24, 0xFE	; 254
     224:	80 83       	st	Z, r24
     226:	80 81       	ld	r24, Z
     228:	8d 7f       	andi	r24, 0xFD	; 253
     22a:	80 83       	st	Z, r24
     22c:	60 e0       	ldi	r22, 0x00	; 0
     22e:	74 e2       	ldi	r23, 0x24	; 36
     230:	84 ef       	ldi	r24, 0xF4	; 244
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__udivmodsi4>
     238:	20 51       	subi	r18, 0x10	; 16
     23a:	26 95       	lsr	r18
     23c:	20 93 b8 00 	sts	0x00B8, r18	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     240:	e4 e6       	ldi	r30, 0x64	; 100
     242:	f0 e0       	ldi	r31, 0x00	; 0
     244:	80 81       	ld	r24, Z
     246:	8f 77       	andi	r24, 0x7F	; 127
     248:	80 83       	st	Z, r24
     24a:	08 95       	ret

0000024c <TWI_start_condition>:
     24c:	84 ea       	ldi	r24, 0xA4	; 164
     24e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     252:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     256:	88 23       	and	r24, r24
     258:	e4 f7       	brge	.-8      	; 0x252 <TWI_start_condition+0x6>
     25a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     25e:	88 7f       	andi	r24, 0xF8	; 248
     260:	88 30       	cpi	r24, 0x08	; 8
     262:	11 f4       	brne	.+4      	; 0x268 <TWI_start_condition+0x1c>
     264:	80 e0       	ldi	r24, 0x00	; 0
     266:	08 95       	ret
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	08 95       	ret

0000026c <TWI_stop_condition>:

void TWI_stop_condition()
{
	TWCR |= ((1 << TWINT) | (1 << TWSTO) | (1 << TWEN));	
     26c:	ec eb       	ldi	r30, 0xBC	; 188
     26e:	f0 e0       	ldi	r31, 0x00	; 0
     270:	80 81       	ld	r24, Z
     272:	84 69       	ori	r24, 0x94	; 148
     274:	80 83       	st	Z, r24
     276:	08 95       	ret

00000278 <TWI_write_address>:
}

bool TWI_write_address(uint8_t address, uint8_t w_r)
{
	uint8_t wrt_rd = 0;
	address = (address << 1);	//go through the memory address 1 bit to be able to write the action
     278:	88 0f       	add	r24, r24
	
	if(w_r  == TWI_W)
     27a:	66 23       	and	r22, r22
     27c:	19 f0       	breq	.+6      	; 0x284 <TWI_write_address+0xc>
		address &= ~ 1;			//add the write bit in the byte to send
		wrt_rd = TWI_WT_SLA_ACK;
	}
	else
	{
		address |= 1;
     27e:	81 60       	ori	r24, 0x01	; 1
		wrt_rd = TWI_RD_SLA_ACK;
     280:	20 e4       	ldi	r18, 0x40	; 64
     282:	01 c0       	rjmp	.+2      	; 0x286 <TWI_write_address+0xe>
	address = (address << 1);	//go through the memory address 1 bit to be able to write the action
	
	if(w_r  == TWI_W)
	{
		address &= ~ 1;			//add the write bit in the byte to send
		wrt_rd = TWI_WT_SLA_ACK;
     284:	28 e1       	ldi	r18, 0x18	; 24
	{
		address |= 1;
		wrt_rd = TWI_RD_SLA_ACK;
	}
	
	TWDR = address;
     286:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR |= ((1 << TWINT) | (1 << TWEN));
     28a:	ec eb       	ldi	r30, 0xBC	; 188
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	84 68       	ori	r24, 0x84	; 132
     292:	80 83       	st	Z, r24
	
	while( !(TWCR & (1 << TWINT)));
     294:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     298:	88 23       	and	r24, r24
     29a:	e4 f7       	brge	.-8      	; 0x294 <TWI_write_address+0x1c>
	
	if ((TWSR & 0xF8) == wrt_rd)
     29c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     2a0:	88 7f       	andi	r24, 0xF8	; 248
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	82 17       	cp	r24, r18
     2a8:	93 07       	cpc	r25, r19
     2aa:	11 f4       	brne	.+4      	; 0x2b0 <TWI_write_address+0x38>
	{
		return false;
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	08 95       	ret
	}
	return true;
     2b0:	81 e0       	ldi	r24, 0x01	; 1
}
     2b2:	08 95       	ret

000002b4 <TWI_write_data>:

bool TWI_write_data(uint8_t data)
{
	TWDR = data;
     2b4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = ((1 << TWINT)  | (1 << TWEN));
     2b8:	84 e8       	ldi	r24, 0x84	; 132
     2ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	
	while( !(TWCR & (1 << TWINT)));
     2be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2c2:	88 23       	and	r24, r24
     2c4:	e4 f7       	brge	.-8      	; 0x2be <TWI_write_data+0xa>
	
	if((TWSR & 0xF8) == TWI_MT_DATA_ACK)
     2c6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     2ca:	88 7f       	andi	r24, 0xF8	; 248
     2cc:	88 32       	cpi	r24, 0x28	; 40
     2ce:	11 f4       	brne	.+4      	; 0x2d4 <TWI_write_data+0x20>
	{
		return false;
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	08 95       	ret
	}
	return true;
     2d4:	81 e0       	ldi	r24, 0x01	; 1
}
     2d6:	08 95       	ret

000002d8 <configLCDPorts>:

void configLCDPorts(void)
{
	
	/* Configure the microprocessor pins for the data lines */
	LCD_DDR |= ((1 << LCD_D7) | (1 << LCD_D6) | (1 << LCD_D5) | (1 << LCD_D4));
     2d8:	8a b1       	in	r24, 0x0a	; 10
     2da:	80 6f       	ori	r24, 0xF0	; 240
     2dc:	8a b9       	out	0x0a, r24	; 10
	
	/* Configure the microprocessor pins for the control lines */
	LCD_DDR |= ((1 << LCD_RS) | (1 << LCD_EN) | (1 << LCD_RW));
     2de:	8a b1       	in	r24, 0x0a	; 10
     2e0:	8e 60       	ori	r24, 0x0E	; 14
     2e2:	8a b9       	out	0x0a, r24	; 10
	
	LCD_PORT &= ~((1 << LCD_D7) | (1 << LCD_D6) | (1 << LCD_D5) | (1 << LCD_D4));
     2e4:	8b b1       	in	r24, 0x0b	; 11
     2e6:	8f 70       	andi	r24, 0x0F	; 15
     2e8:	8b b9       	out	0x0b, r24	; 11
     2ea:	08 95       	ret

000002ec <LCD_Send_Data>:
}


void LCD_Send_Data (uint8_t data)
{
	if ((data & 1) == 0) LCD_PORT &= ~(1 << LCD_D4);	else LCD_PORT |= (1 << LCD_D4);
     2ec:	80 fd       	sbrc	r24, 0
     2ee:	04 c0       	rjmp	.+8      	; 0x2f8 <LCD_Send_Data+0xc>
     2f0:	9b b1       	in	r25, 0x0b	; 11
     2f2:	9f 7e       	andi	r25, 0xEF	; 239
     2f4:	9b b9       	out	0x0b, r25	; 11
     2f6:	03 c0       	rjmp	.+6      	; 0x2fe <LCD_Send_Data+0x12>
     2f8:	9b b1       	in	r25, 0x0b	; 11
     2fa:	90 61       	ori	r25, 0x10	; 16
     2fc:	9b b9       	out	0x0b, r25	; 11
	if ((data & 2) == 0) LCD_PORT &= ~(1 << LCD_D5);	else LCD_PORT |= (1 << LCD_D5);
     2fe:	81 fd       	sbrc	r24, 1
     300:	04 c0       	rjmp	.+8      	; 0x30a <LCD_Send_Data+0x1e>
     302:	9b b1       	in	r25, 0x0b	; 11
     304:	9f 7d       	andi	r25, 0xDF	; 223
     306:	9b b9       	out	0x0b, r25	; 11
     308:	03 c0       	rjmp	.+6      	; 0x310 <LCD_Send_Data+0x24>
     30a:	9b b1       	in	r25, 0x0b	; 11
     30c:	90 62       	ori	r25, 0x20	; 32
     30e:	9b b9       	out	0x0b, r25	; 11
	if ((data & 4) == 0) LCD_PORT &= ~(1 << LCD_D6);	else LCD_PORT |= (1 << LCD_D6);
     310:	82 fd       	sbrc	r24, 2
     312:	04 c0       	rjmp	.+8      	; 0x31c <LCD_Send_Data+0x30>
     314:	9b b1       	in	r25, 0x0b	; 11
     316:	9f 7b       	andi	r25, 0xBF	; 191
     318:	9b b9       	out	0x0b, r25	; 11
     31a:	03 c0       	rjmp	.+6      	; 0x322 <LCD_Send_Data+0x36>
     31c:	9b b1       	in	r25, 0x0b	; 11
     31e:	90 64       	ori	r25, 0x40	; 64
     320:	9b b9       	out	0x0b, r25	; 11
	if ((data & 8) == 0) LCD_PORT &= ~(1 << LCD_D7);	else LCD_PORT |= (1 << LCD_D7);
     322:	83 fd       	sbrc	r24, 3
     324:	04 c0       	rjmp	.+8      	; 0x32e <LCD_Send_Data+0x42>
     326:	8b b1       	in	r24, 0x0b	; 11
     328:	8f 77       	andi	r24, 0x7F	; 127
     32a:	8b b9       	out	0x0b, r24	; 11
     32c:	03 c0       	rjmp	.+6      	; 0x334 <LCD_Send_Data+0x48>
     32e:	8b b1       	in	r24, 0x0b	; 11
     330:	80 68       	ori	r24, 0x80	; 128
     332:	8b b9       	out	0x0b, r24	; 11
	
	LCD_PORT &= ~(1 << LCD_EN);
     334:	8b b1       	in	r24, 0x0b	; 11
     336:	87 7f       	andi	r24, 0xF7	; 247
     338:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT |= (1 << LCD_EN);
     33a:	8b b1       	in	r24, 0x0b	; 11
     33c:	88 60       	ori	r24, 0x08	; 8
     33e:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT &= ~(1 << LCD_EN);
     340:	8b b1       	in	r24, 0x0b	; 11
     342:	87 7f       	andi	r24, 0xF7	; 247
     344:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     346:	8f ea       	ldi	r24, 0xAF	; 175
     348:	94 e0       	ldi	r25, 0x04	; 4
     34a:	01 97       	sbiw	r24, 0x01	; 1
     34c:	f1 f7       	brne	.-4      	; 0x34a <LCD_Send_Data+0x5e>
     34e:	00 c0       	rjmp	.+0      	; 0x350 <LCD_Send_Data+0x64>
     350:	00 00       	nop
     352:	08 95       	ret

00000354 <LCD_Is_Busy>:

void LCD_Is_Busy ()
{
	bool busy_flag; 
	
	LCD_DDR &= ~(1 << LCD_D7);
     354:	8a b1       	in	r24, 0x0a	; 10
     356:	8f 77       	andi	r24, 0x7F	; 127
     358:	8a b9       	out	0x0a, r24	; 10
	LCD_PORT &= ~(1 << LCD_RS);
     35a:	8b b1       	in	r24, 0x0b	; 11
     35c:	8b 7f       	andi	r24, 0xFB	; 251
     35e:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT |= (1 << LCD_RW);
     360:	8b b1       	in	r24, 0x0b	; 11
     362:	82 60       	ori	r24, 0x02	; 2
     364:	8b b9       	out	0x0b, r24	; 11
	
	
	do 
	{
		busy_flag = false;
		LCD_PORT |= (1 << LCD_EN);
     366:	8b b1       	in	r24, 0x0b	; 11
     368:	88 60       	ori	r24, 0x08	; 8
     36a:	8b b9       	out	0x0b, r24	; 11
     36c:	85 e0       	ldi	r24, 0x05	; 5
     36e:	8a 95       	dec	r24
     370:	f1 f7       	brne	.-4      	; 0x36e <LCD_Is_Busy+0x1a>
     372:	00 00       	nop
		_delay_us(1);
		
		busy_flag |= (LCD_D7_Pin & (1 << LCD_D7));
     374:	99 b1       	in	r25, 0x09	; 9
		
		LCD_PORT &= ~(1 << LCD_EN);
     376:	8b b1       	in	r24, 0x0b	; 11
     378:	87 7f       	andi	r24, 0xF7	; 247
     37a:	8b b9       	out	0x0b, r24	; 11
     37c:	85 e0       	ldi	r24, 0x05	; 5
     37e:	8a 95       	dec	r24
     380:	f1 f7       	brne	.-4      	; 0x37e <LCD_Is_Busy+0x2a>
     382:	00 00       	nop
		_delay_us(1);
		
		LCD_PORT |= (1 << LCD_EN);
     384:	8b b1       	in	r24, 0x0b	; 11
     386:	88 60       	ori	r24, 0x08	; 8
     388:	8b b9       	out	0x0b, r24	; 11
     38a:	85 e0       	ldi	r24, 0x05	; 5
     38c:	8a 95       	dec	r24
     38e:	f1 f7       	brne	.-4      	; 0x38c <LCD_Is_Busy+0x38>
     390:	00 00       	nop
		_delay_us(1);
		LCD_PORT &= ~(1 << LCD_EN);
     392:	8b b1       	in	r24, 0x0b	; 11
     394:	87 7f       	andi	r24, 0xF7	; 247
     396:	8b b9       	out	0x0b, r24	; 11
     398:	85 e0       	ldi	r24, 0x05	; 5
     39a:	8a 95       	dec	r24
     39c:	f1 f7       	brne	.-4      	; 0x39a <LCD_Is_Busy+0x46>
     39e:	00 00       	nop
		_delay_us(1);
		
	} while (busy_flag);
     3a0:	99 23       	and	r25, r25
     3a2:	0c f3       	brlt	.-62     	; 0x366 <LCD_Is_Busy+0x12>
	
	LCD_PORT &= ~(1 << LCD_RW);
     3a4:	8b b1       	in	r24, 0x0b	; 11
     3a6:	8d 7f       	andi	r24, 0xFD	; 253
     3a8:	8b b9       	out	0x0b, r24	; 11
	LCD_DDR |= (1 << LCD_D7);
     3aa:	8a b1       	in	r24, 0x0a	; 10
     3ac:	80 68       	ori	r24, 0x80	; 128
     3ae:	8a b9       	out	0x0a, r24	; 10
     3b0:	08 95       	ret

000003b2 <LCD_Write_Instruction>:
		LCD_Parser(*str++);
	}
}

void LCD_Write_Instruction(uint8_t data)
{
     3b2:	cf 93       	push	r28
     3b4:	c8 2f       	mov	r28, r24
	//_delay_ms(2);
	LCD_Is_Busy();
     3b6:	0e 94 aa 01 	call	0x354	; 0x354 <LCD_Is_Busy>
	LCD_PORT &= ~(1 << LCD_RS);
     3ba:	8b b1       	in	r24, 0x0b	; 11
     3bc:	8b 7f       	andi	r24, 0xFB	; 251
     3be:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT &= ~(1 << LCD_EN);
     3c0:	8b b1       	in	r24, 0x0b	; 11
     3c2:	87 7f       	andi	r24, 0xF7	; 247
     3c4:	8b b9       	out	0x0b, r24	; 11
	LCD_Send_Data(data >> 4);
     3c6:	8c 2f       	mov	r24, r28
     3c8:	82 95       	swap	r24
     3ca:	8f 70       	andi	r24, 0x0F	; 15
     3cc:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
	LCD_Send_Data(data);
     3d0:	8c 2f       	mov	r24, r28
     3d2:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
	/*LCD_Send_Data(4 >> data);
	LCD_Send_Data(data & 0x0F);*/
	
}
     3d6:	cf 91       	pop	r28
     3d8:	08 95       	ret

000003da <LCD_Init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3da:	2f ef       	ldi	r18, 0xFF	; 255
     3dc:	80 e7       	ldi	r24, 0x70	; 112
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	21 50       	subi	r18, 0x01	; 1
     3e2:	80 40       	sbci	r24, 0x00	; 0
     3e4:	90 40       	sbci	r25, 0x00	; 0
     3e6:	e1 f7       	brne	.-8      	; 0x3e0 <LCD_Init+0x6>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <LCD_Init+0x10>
     3ea:	00 00       	nop


void LCD_Init ()
{
	_delay_ms(50);
	configLCDPorts();
     3ec:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <configLCDPorts>
	
	LCD_PORT &= ~(1 << LCD_RS);
     3f0:	8b b1       	in	r24, 0x0b	; 11
     3f2:	8b 7f       	andi	r24, 0xFB	; 251
     3f4:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT &= ~(1 << LCD_EN);
     3f6:	8b b1       	in	r24, 0x0b	; 11
     3f8:	87 7f       	andi	r24, 0xF7	; 247
     3fa:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT &= ~(1 << LCD_RW);
     3fc:	8b b1       	in	r24, 0x0b	; 11
     3fe:	8d 7f       	andi	r24, 0xFD	; 253
     400:	8b b9       	out	0x0b, r24	; 11
	
	LCD_Send_Data(0x03);
     402:	83 e0       	ldi	r24, 0x03	; 3
     404:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     408:	8f e4       	ldi	r24, 0x4F	; 79
     40a:	96 e4       	ldi	r25, 0x46	; 70
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     410:	00 c0       	rjmp	.+0      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     412:	00 00       	nop
	_delay_us(4500);
	LCD_Send_Data(0x03);
     414:	83 e0       	ldi	r24, 0x03	; 3
     416:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
     41a:	8f e4       	ldi	r24, 0x4F	; 79
     41c:	96 e4       	ldi	r25, 0x46	; 70
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	f1 f7       	brne	.-4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     422:	00 c0       	rjmp	.+0      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     424:	00 00       	nop
	_delay_us(4500);
	LCD_Send_Data(0x03);
     426:	83 e0       	ldi	r24, 0x03	; 3
     428:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
     42c:	87 e5       	ldi	r24, 0x57	; 87
     42e:	92 e0       	ldi	r25, 0x02	; 2
     430:	01 97       	sbiw	r24, 0x01	; 1
     432:	f1 f7       	brne	.-4      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     434:	00 c0       	rjmp	.+0      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
     436:	00 00       	nop
	_delay_us(150);
	LCD_Send_Data(0x02);
     438:	82 e0       	ldi	r24, 0x02	; 2
     43a:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
	LCD_Write_Instruction(LCD_FUNCTION_SET | LCD_4BITS);
     43e:	80 e2       	ldi	r24, 0x20	; 32
     440:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_Write_Instruction>
	LCD_Write_Instruction(LCD_FUNCTION_SET | LCD_2LINES | LCD_5X8DOTS);
     444:	88 e2       	ldi	r24, 0x28	; 40
     446:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_Write_Instruction>
	LCD_Write_Instruction(LCD_DISPLAY_CONTROL | LCD_DISPLAY_ON | LCD_CURSOR_ON | LCD_BLINK_ON);
     44a:	8f e0       	ldi	r24, 0x0F	; 15
     44c:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_Write_Instruction>
	LCD_Write_Instruction(LCD_CLEAR);
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_Write_Instruction>
     456:	08 95       	ret

00000458 <LCD_Parser>:
	LCD_Send_Data(data & 0x0F);*/
	
}

void LCD_Parser (uint8_t data)
{	
     458:	cf 93       	push	r28
     45a:	c8 2f       	mov	r28, r24
	//_delay_ms(2);
	LCD_Is_Busy();
     45c:	0e 94 aa 01 	call	0x354	; 0x354 <LCD_Is_Busy>
	LCD_PORT |= (1 << LCD_RS);
     460:	8b b1       	in	r24, 0x0b	; 11
     462:	84 60       	ori	r24, 0x04	; 4
     464:	8b b9       	out	0x0b, r24	; 11
	LCD_PORT &= ~(1 << LCD_EN);
     466:	8b b1       	in	r24, 0x0b	; 11
     468:	87 7f       	andi	r24, 0xF7	; 247
     46a:	8b b9       	out	0x0b, r24	; 11
	LCD_Send_Data(data >> 4);
     46c:	8c 2f       	mov	r24, r28
     46e:	82 95       	swap	r24
     470:	8f 70       	andi	r24, 0x0F	; 15
     472:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
	LCD_Send_Data(data);
     476:	8c 2f       	mov	r24, r28
     478:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Send_Data>
	
}
     47c:	cf 91       	pop	r28
     47e:	08 95       	ret

00000480 <LCD_Print>:
	va_end(args);
	LCD_Print(lcd_buffer);
}

void LCD_Print(char *str)
{
     480:	cf 93       	push	r28
     482:	df 93       	push	r29
     484:	ec 01       	movw	r28, r24
	while (*str)
     486:	03 c0       	rjmp	.+6      	; 0x48e <LCD_Print+0xe>
	{
		LCD_Parser(*str++);
     488:	21 96       	adiw	r28, 0x01	; 1
     48a:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Parser>
	LCD_Print(lcd_buffer);
}

void LCD_Print(char *str)
{
	while (*str)
     48e:	88 81       	ld	r24, Y
     490:	81 11       	cpse	r24, r1
     492:	fa cf       	rjmp	.-12     	; 0x488 <LCD_Print+0x8>
	{
		LCD_Parser(*str++);
	}
}
     494:	df 91       	pop	r29
     496:	cf 91       	pop	r28
     498:	08 95       	ret

0000049a <LCD_Printf>:
	LCD_Write_Instruction(LCD_DISPLAY_CONTROL | LCD_DISPLAY_ON | LCD_CURSOR_ON | LCD_BLINK_ON);
	LCD_Write_Instruction(LCD_CLEAR);
}

void LCD_Printf(char *str, ...)
{
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	cd b7       	in	r28, 0x3d	; 61
     4a0:	de b7       	in	r29, 0x3e	; 62
     4a2:	9e 01       	movw	r18, r28
     4a4:	2b 5f       	subi	r18, 0xFB	; 251
     4a6:	3f 4f       	sbci	r19, 0xFF	; 255
     4a8:	f9 01       	movw	r30, r18
     4aa:	41 91       	ld	r20, Z+
     4ac:	51 91       	ld	r21, Z+
     4ae:	9f 01       	movw	r18, r30
	va_list args;
	va_start(args, str);
	vsnprintf(lcd_buffer, N_Colum + 1, str, args);
     4b0:	61 e1       	ldi	r22, 0x11	; 17
     4b2:	70 e0       	ldi	r23, 0x00	; 0
     4b4:	84 e1       	ldi	r24, 0x14	; 20
     4b6:	91 e0       	ldi	r25, 0x01	; 1
     4b8:	0e 94 82 07 	call	0xf04	; 0xf04 <vsnprintf>
	va_end(args);
	LCD_Print(lcd_buffer);
     4bc:	84 e1       	ldi	r24, 0x14	; 20
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Print>
}
     4c4:	df 91       	pop	r29
     4c6:	cf 91       	pop	r28
     4c8:	08 95       	ret

000004ca <PCF8574_Send_Data>:

#include "PCF8574.h"


void PCF8574_Send_Data(uint8_t address, uint8_t data)
{
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
     4ce:	d8 2f       	mov	r29, r24
     4d0:	c6 2f       	mov	r28, r22
	while (TWI_start_condition());
     4d2:	0e 94 26 01 	call	0x24c	; 0x24c <TWI_start_condition>
     4d6:	81 11       	cpse	r24, r1
     4d8:	fc cf       	rjmp	.-8      	; 0x4d2 <PCF8574_Send_Data+0x8>
	while (TWI_write_address(address, TWI_W));
     4da:	60 e0       	ldi	r22, 0x00	; 0
     4dc:	8d 2f       	mov	r24, r29
     4de:	0e 94 3c 01 	call	0x278	; 0x278 <TWI_write_address>
     4e2:	81 11       	cpse	r24, r1
     4e4:	fa cf       	rjmp	.-12     	; 0x4da <PCF8574_Send_Data+0x10>
	while (TWI_write_data(0x40));					//address to write
     4e6:	80 e4       	ldi	r24, 0x40	; 64
     4e8:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <TWI_write_data>
     4ec:	81 11       	cpse	r24, r1
     4ee:	fb cf       	rjmp	.-10     	; 0x4e6 <PCF8574_Send_Data+0x1c>
	while (TWI_write_data(data));						// value to register
     4f0:	8c 2f       	mov	r24, r28
     4f2:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <TWI_write_data>
     4f6:	81 11       	cpse	r24, r1
     4f8:	fb cf       	rjmp	.-10     	; 0x4f0 <PCF8574_Send_Data+0x26>
	TWI_stop_condition();
     4fa:	0e 94 36 01 	call	0x26c	; 0x26c <TWI_stop_condition>
	
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	08 95       	ret

00000504 <vfprintf>:
     504:	a0 e1       	ldi	r26, 0x10	; 16
     506:	b0 e0       	ldi	r27, 0x00	; 0
     508:	e8 e8       	ldi	r30, 0x88	; 136
     50a:	f2 e0       	ldi	r31, 0x02	; 2
     50c:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__prologue_saves__>
     510:	7c 01       	movw	r14, r24
     512:	1b 01       	movw	r2, r22
     514:	6a 01       	movw	r12, r20
     516:	fc 01       	movw	r30, r24
     518:	17 82       	std	Z+7, r1	; 0x07
     51a:	16 82       	std	Z+6, r1	; 0x06
     51c:	83 81       	ldd	r24, Z+3	; 0x03
     51e:	81 ff       	sbrs	r24, 1
     520:	44 c3       	rjmp	.+1672   	; 0xbaa <__stack+0x2ab>
     522:	9e 01       	movw	r18, r28
     524:	2f 5f       	subi	r18, 0xFF	; 255
     526:	3f 4f       	sbci	r19, 0xFF	; 255
     528:	39 01       	movw	r6, r18
     52a:	f7 01       	movw	r30, r14
     52c:	93 81       	ldd	r25, Z+3	; 0x03
     52e:	f1 01       	movw	r30, r2
     530:	93 fd       	sbrc	r25, 3
     532:	85 91       	lpm	r24, Z+
     534:	93 ff       	sbrs	r25, 3
     536:	81 91       	ld	r24, Z+
     538:	1f 01       	movw	r2, r30
     53a:	88 23       	and	r24, r24
     53c:	09 f4       	brne	.+2      	; 0x540 <vfprintf+0x3c>
     53e:	31 c3       	rjmp	.+1634   	; 0xba2 <__stack+0x2a3>
     540:	85 32       	cpi	r24, 0x25	; 37
     542:	39 f4       	brne	.+14     	; 0x552 <vfprintf+0x4e>
     544:	93 fd       	sbrc	r25, 3
     546:	85 91       	lpm	r24, Z+
     548:	93 ff       	sbrs	r25, 3
     54a:	81 91       	ld	r24, Z+
     54c:	1f 01       	movw	r2, r30
     54e:	85 32       	cpi	r24, 0x25	; 37
     550:	39 f4       	brne	.+14     	; 0x560 <vfprintf+0x5c>
     552:	b7 01       	movw	r22, r14
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     55a:	56 01       	movw	r10, r12
     55c:	65 01       	movw	r12, r10
     55e:	e5 cf       	rjmp	.-54     	; 0x52a <vfprintf+0x26>
     560:	10 e0       	ldi	r17, 0x00	; 0
     562:	51 2c       	mov	r5, r1
     564:	91 2c       	mov	r9, r1
     566:	ff e1       	ldi	r31, 0x1F	; 31
     568:	f9 15       	cp	r31, r9
     56a:	d8 f0       	brcs	.+54     	; 0x5a2 <vfprintf+0x9e>
     56c:	8b 32       	cpi	r24, 0x2B	; 43
     56e:	79 f0       	breq	.+30     	; 0x58e <vfprintf+0x8a>
     570:	38 f4       	brcc	.+14     	; 0x580 <vfprintf+0x7c>
     572:	80 32       	cpi	r24, 0x20	; 32
     574:	79 f0       	breq	.+30     	; 0x594 <vfprintf+0x90>
     576:	83 32       	cpi	r24, 0x23	; 35
     578:	a1 f4       	brne	.+40     	; 0x5a2 <vfprintf+0x9e>
     57a:	f9 2d       	mov	r31, r9
     57c:	f0 61       	ori	r31, 0x10	; 16
     57e:	2e c0       	rjmp	.+92     	; 0x5dc <vfprintf+0xd8>
     580:	8d 32       	cpi	r24, 0x2D	; 45
     582:	61 f0       	breq	.+24     	; 0x59c <vfprintf+0x98>
     584:	80 33       	cpi	r24, 0x30	; 48
     586:	69 f4       	brne	.+26     	; 0x5a2 <vfprintf+0x9e>
     588:	29 2d       	mov	r18, r9
     58a:	21 60       	ori	r18, 0x01	; 1
     58c:	2d c0       	rjmp	.+90     	; 0x5e8 <vfprintf+0xe4>
     58e:	39 2d       	mov	r19, r9
     590:	32 60       	ori	r19, 0x02	; 2
     592:	93 2e       	mov	r9, r19
     594:	89 2d       	mov	r24, r9
     596:	84 60       	ori	r24, 0x04	; 4
     598:	98 2e       	mov	r9, r24
     59a:	2a c0       	rjmp	.+84     	; 0x5f0 <vfprintf+0xec>
     59c:	e9 2d       	mov	r30, r9
     59e:	e8 60       	ori	r30, 0x08	; 8
     5a0:	15 c0       	rjmp	.+42     	; 0x5cc <vfprintf+0xc8>
     5a2:	97 fc       	sbrc	r9, 7
     5a4:	2d c0       	rjmp	.+90     	; 0x600 <vfprintf+0xfc>
     5a6:	20 ed       	ldi	r18, 0xD0	; 208
     5a8:	28 0f       	add	r18, r24
     5aa:	2a 30       	cpi	r18, 0x0A	; 10
     5ac:	88 f4       	brcc	.+34     	; 0x5d0 <vfprintf+0xcc>
     5ae:	96 fe       	sbrs	r9, 6
     5b0:	06 c0       	rjmp	.+12     	; 0x5be <vfprintf+0xba>
     5b2:	3a e0       	ldi	r19, 0x0A	; 10
     5b4:	13 9f       	mul	r17, r19
     5b6:	20 0d       	add	r18, r0
     5b8:	11 24       	eor	r1, r1
     5ba:	12 2f       	mov	r17, r18
     5bc:	19 c0       	rjmp	.+50     	; 0x5f0 <vfprintf+0xec>
     5be:	8a e0       	ldi	r24, 0x0A	; 10
     5c0:	58 9e       	mul	r5, r24
     5c2:	20 0d       	add	r18, r0
     5c4:	11 24       	eor	r1, r1
     5c6:	52 2e       	mov	r5, r18
     5c8:	e9 2d       	mov	r30, r9
     5ca:	e0 62       	ori	r30, 0x20	; 32
     5cc:	9e 2e       	mov	r9, r30
     5ce:	10 c0       	rjmp	.+32     	; 0x5f0 <vfprintf+0xec>
     5d0:	8e 32       	cpi	r24, 0x2E	; 46
     5d2:	31 f4       	brne	.+12     	; 0x5e0 <vfprintf+0xdc>
     5d4:	96 fc       	sbrc	r9, 6
     5d6:	e5 c2       	rjmp	.+1482   	; 0xba2 <__stack+0x2a3>
     5d8:	f9 2d       	mov	r31, r9
     5da:	f0 64       	ori	r31, 0x40	; 64
     5dc:	9f 2e       	mov	r9, r31
     5de:	08 c0       	rjmp	.+16     	; 0x5f0 <vfprintf+0xec>
     5e0:	8c 36       	cpi	r24, 0x6C	; 108
     5e2:	21 f4       	brne	.+8      	; 0x5ec <vfprintf+0xe8>
     5e4:	29 2d       	mov	r18, r9
     5e6:	20 68       	ori	r18, 0x80	; 128
     5e8:	92 2e       	mov	r9, r18
     5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <vfprintf+0xec>
     5ec:	88 36       	cpi	r24, 0x68	; 104
     5ee:	41 f4       	brne	.+16     	; 0x600 <vfprintf+0xfc>
     5f0:	f1 01       	movw	r30, r2
     5f2:	93 fd       	sbrc	r25, 3
     5f4:	85 91       	lpm	r24, Z+
     5f6:	93 ff       	sbrs	r25, 3
     5f8:	81 91       	ld	r24, Z+
     5fa:	1f 01       	movw	r2, r30
     5fc:	81 11       	cpse	r24, r1
     5fe:	b3 cf       	rjmp	.-154    	; 0x566 <vfprintf+0x62>
     600:	9b eb       	ldi	r25, 0xBB	; 187
     602:	98 0f       	add	r25, r24
     604:	93 30       	cpi	r25, 0x03	; 3
     606:	20 f4       	brcc	.+8      	; 0x610 <vfprintf+0x10c>
     608:	99 2d       	mov	r25, r9
     60a:	90 61       	ori	r25, 0x10	; 16
     60c:	80 5e       	subi	r24, 0xE0	; 224
     60e:	07 c0       	rjmp	.+14     	; 0x61e <vfprintf+0x11a>
     610:	9b e9       	ldi	r25, 0x9B	; 155
     612:	98 0f       	add	r25, r24
     614:	93 30       	cpi	r25, 0x03	; 3
     616:	08 f0       	brcs	.+2      	; 0x61a <vfprintf+0x116>
     618:	66 c1       	rjmp	.+716    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     61a:	99 2d       	mov	r25, r9
     61c:	9f 7e       	andi	r25, 0xEF	; 239
     61e:	96 ff       	sbrs	r25, 6
     620:	16 e0       	ldi	r17, 0x06	; 6
     622:	9f 73       	andi	r25, 0x3F	; 63
     624:	99 2e       	mov	r9, r25
     626:	85 36       	cpi	r24, 0x65	; 101
     628:	19 f4       	brne	.+6      	; 0x630 <vfprintf+0x12c>
     62a:	90 64       	ori	r25, 0x40	; 64
     62c:	99 2e       	mov	r9, r25
     62e:	08 c0       	rjmp	.+16     	; 0x640 <vfprintf+0x13c>
     630:	86 36       	cpi	r24, 0x66	; 102
     632:	21 f4       	brne	.+8      	; 0x63c <vfprintf+0x138>
     634:	39 2f       	mov	r19, r25
     636:	30 68       	ori	r19, 0x80	; 128
     638:	93 2e       	mov	r9, r19
     63a:	02 c0       	rjmp	.+4      	; 0x640 <vfprintf+0x13c>
     63c:	11 11       	cpse	r17, r1
     63e:	11 50       	subi	r17, 0x01	; 1
     640:	97 fe       	sbrs	r9, 7
     642:	07 c0       	rjmp	.+14     	; 0x652 <vfprintf+0x14e>
     644:	1c 33       	cpi	r17, 0x3C	; 60
     646:	50 f4       	brcc	.+20     	; 0x65c <vfprintf+0x158>
     648:	44 24       	eor	r4, r4
     64a:	43 94       	inc	r4
     64c:	41 0e       	add	r4, r17
     64e:	27 e0       	ldi	r18, 0x07	; 7
     650:	0b c0       	rjmp	.+22     	; 0x668 <vfprintf+0x164>
     652:	18 30       	cpi	r17, 0x08	; 8
     654:	38 f0       	brcs	.+14     	; 0x664 <vfprintf+0x160>
     656:	27 e0       	ldi	r18, 0x07	; 7
     658:	17 e0       	ldi	r17, 0x07	; 7
     65a:	05 c0       	rjmp	.+10     	; 0x666 <vfprintf+0x162>
     65c:	27 e0       	ldi	r18, 0x07	; 7
     65e:	9c e3       	ldi	r25, 0x3C	; 60
     660:	49 2e       	mov	r4, r25
     662:	02 c0       	rjmp	.+4      	; 0x668 <vfprintf+0x164>
     664:	21 2f       	mov	r18, r17
     666:	41 2c       	mov	r4, r1
     668:	56 01       	movw	r10, r12
     66a:	84 e0       	ldi	r24, 0x04	; 4
     66c:	a8 0e       	add	r10, r24
     66e:	b1 1c       	adc	r11, r1
     670:	f6 01       	movw	r30, r12
     672:	60 81       	ld	r22, Z
     674:	71 81       	ldd	r23, Z+1	; 0x01
     676:	82 81       	ldd	r24, Z+2	; 0x02
     678:	93 81       	ldd	r25, Z+3	; 0x03
     67a:	04 2d       	mov	r16, r4
     67c:	a3 01       	movw	r20, r6
     67e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__ftoa_engine>
     682:	6c 01       	movw	r12, r24
     684:	f9 81       	ldd	r31, Y+1	; 0x01
     686:	fc 87       	std	Y+12, r31	; 0x0c
     688:	f0 ff       	sbrs	r31, 0
     68a:	02 c0       	rjmp	.+4      	; 0x690 <vfprintf+0x18c>
     68c:	f3 ff       	sbrs	r31, 3
     68e:	06 c0       	rjmp	.+12     	; 0x69c <vfprintf+0x198>
     690:	91 fc       	sbrc	r9, 1
     692:	06 c0       	rjmp	.+12     	; 0x6a0 <vfprintf+0x19c>
     694:	92 fe       	sbrs	r9, 2
     696:	06 c0       	rjmp	.+12     	; 0x6a4 <vfprintf+0x1a0>
     698:	00 e2       	ldi	r16, 0x20	; 32
     69a:	05 c0       	rjmp	.+10     	; 0x6a6 <vfprintf+0x1a2>
     69c:	0d e2       	ldi	r16, 0x2D	; 45
     69e:	03 c0       	rjmp	.+6      	; 0x6a6 <vfprintf+0x1a2>
     6a0:	0b e2       	ldi	r16, 0x2B	; 43
     6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <vfprintf+0x1a2>
     6a4:	00 e0       	ldi	r16, 0x00	; 0
     6a6:	8c 85       	ldd	r24, Y+12	; 0x0c
     6a8:	8c 70       	andi	r24, 0x0C	; 12
     6aa:	19 f0       	breq	.+6      	; 0x6b2 <vfprintf+0x1ae>
     6ac:	01 11       	cpse	r16, r1
     6ae:	5a c2       	rjmp	.+1204   	; 0xb64 <__stack+0x265>
     6b0:	9b c2       	rjmp	.+1334   	; 0xbe8 <__stack+0x2e9>
     6b2:	97 fe       	sbrs	r9, 7
     6b4:	10 c0       	rjmp	.+32     	; 0x6d6 <vfprintf+0x1d2>
     6b6:	4c 0c       	add	r4, r12
     6b8:	fc 85       	ldd	r31, Y+12	; 0x0c
     6ba:	f4 ff       	sbrs	r31, 4
     6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <vfprintf+0x1c2>
     6be:	8a 81       	ldd	r24, Y+2	; 0x02
     6c0:	81 33       	cpi	r24, 0x31	; 49
     6c2:	09 f4       	brne	.+2      	; 0x6c6 <vfprintf+0x1c2>
     6c4:	4a 94       	dec	r4
     6c6:	14 14       	cp	r1, r4
     6c8:	74 f5       	brge	.+92     	; 0x726 <vfprintf+0x222>
     6ca:	28 e0       	ldi	r18, 0x08	; 8
     6cc:	24 15       	cp	r18, r4
     6ce:	78 f5       	brcc	.+94     	; 0x72e <vfprintf+0x22a>
     6d0:	88 e0       	ldi	r24, 0x08	; 8
     6d2:	48 2e       	mov	r4, r24
     6d4:	2c c0       	rjmp	.+88     	; 0x72e <vfprintf+0x22a>
     6d6:	96 fc       	sbrc	r9, 6
     6d8:	2a c0       	rjmp	.+84     	; 0x72e <vfprintf+0x22a>
     6da:	81 2f       	mov	r24, r17
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	8c 15       	cp	r24, r12
     6e0:	9d 05       	cpc	r25, r13
     6e2:	9c f0       	brlt	.+38     	; 0x70a <vfprintf+0x206>
     6e4:	3c ef       	ldi	r19, 0xFC	; 252
     6e6:	c3 16       	cp	r12, r19
     6e8:	3f ef       	ldi	r19, 0xFF	; 255
     6ea:	d3 06       	cpc	r13, r19
     6ec:	74 f0       	brlt	.+28     	; 0x70a <vfprintf+0x206>
     6ee:	89 2d       	mov	r24, r9
     6f0:	80 68       	ori	r24, 0x80	; 128
     6f2:	98 2e       	mov	r9, r24
     6f4:	0a c0       	rjmp	.+20     	; 0x70a <vfprintf+0x206>
     6f6:	e2 e0       	ldi	r30, 0x02	; 2
     6f8:	f0 e0       	ldi	r31, 0x00	; 0
     6fa:	ec 0f       	add	r30, r28
     6fc:	fd 1f       	adc	r31, r29
     6fe:	e1 0f       	add	r30, r17
     700:	f1 1d       	adc	r31, r1
     702:	80 81       	ld	r24, Z
     704:	80 33       	cpi	r24, 0x30	; 48
     706:	19 f4       	brne	.+6      	; 0x70e <vfprintf+0x20a>
     708:	11 50       	subi	r17, 0x01	; 1
     70a:	11 11       	cpse	r17, r1
     70c:	f4 cf       	rjmp	.-24     	; 0x6f6 <vfprintf+0x1f2>
     70e:	97 fe       	sbrs	r9, 7
     710:	0e c0       	rjmp	.+28     	; 0x72e <vfprintf+0x22a>
     712:	44 24       	eor	r4, r4
     714:	43 94       	inc	r4
     716:	41 0e       	add	r4, r17
     718:	81 2f       	mov	r24, r17
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	c8 16       	cp	r12, r24
     71e:	d9 06       	cpc	r13, r25
     720:	2c f4       	brge	.+10     	; 0x72c <vfprintf+0x228>
     722:	1c 19       	sub	r17, r12
     724:	04 c0       	rjmp	.+8      	; 0x72e <vfprintf+0x22a>
     726:	44 24       	eor	r4, r4
     728:	43 94       	inc	r4
     72a:	01 c0       	rjmp	.+2      	; 0x72e <vfprintf+0x22a>
     72c:	10 e0       	ldi	r17, 0x00	; 0
     72e:	97 fe       	sbrs	r9, 7
     730:	06 c0       	rjmp	.+12     	; 0x73e <vfprintf+0x23a>
     732:	1c 14       	cp	r1, r12
     734:	1d 04       	cpc	r1, r13
     736:	34 f4       	brge	.+12     	; 0x744 <vfprintf+0x240>
     738:	c6 01       	movw	r24, r12
     73a:	01 96       	adiw	r24, 0x01	; 1
     73c:	05 c0       	rjmp	.+10     	; 0x748 <vfprintf+0x244>
     73e:	85 e0       	ldi	r24, 0x05	; 5
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x244>
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	01 11       	cpse	r16, r1
     74a:	01 96       	adiw	r24, 0x01	; 1
     74c:	11 23       	and	r17, r17
     74e:	31 f0       	breq	.+12     	; 0x75c <vfprintf+0x258>
     750:	21 2f       	mov	r18, r17
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	2f 5f       	subi	r18, 0xFF	; 255
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	82 0f       	add	r24, r18
     75a:	93 1f       	adc	r25, r19
     75c:	25 2d       	mov	r18, r5
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	82 17       	cp	r24, r18
     762:	93 07       	cpc	r25, r19
     764:	14 f4       	brge	.+4      	; 0x76a <vfprintf+0x266>
     766:	58 1a       	sub	r5, r24
     768:	01 c0       	rjmp	.+2      	; 0x76c <vfprintf+0x268>
     76a:	51 2c       	mov	r5, r1
     76c:	89 2d       	mov	r24, r9
     76e:	89 70       	andi	r24, 0x09	; 9
     770:	49 f4       	brne	.+18     	; 0x784 <vfprintf+0x280>
     772:	55 20       	and	r5, r5
     774:	39 f0       	breq	.+14     	; 0x784 <vfprintf+0x280>
     776:	b7 01       	movw	r22, r14
     778:	80 e2       	ldi	r24, 0x20	; 32
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     780:	5a 94       	dec	r5
     782:	f7 cf       	rjmp	.-18     	; 0x772 <vfprintf+0x26e>
     784:	00 23       	and	r16, r16
     786:	29 f0       	breq	.+10     	; 0x792 <vfprintf+0x28e>
     788:	b7 01       	movw	r22, r14
     78a:	80 2f       	mov	r24, r16
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     792:	93 fc       	sbrc	r9, 3
     794:	09 c0       	rjmp	.+18     	; 0x7a8 <vfprintf+0x2a4>
     796:	55 20       	and	r5, r5
     798:	39 f0       	breq	.+14     	; 0x7a8 <vfprintf+0x2a4>
     79a:	b7 01       	movw	r22, r14
     79c:	80 e3       	ldi	r24, 0x30	; 48
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     7a4:	5a 94       	dec	r5
     7a6:	f7 cf       	rjmp	.-18     	; 0x796 <vfprintf+0x292>
     7a8:	97 fe       	sbrs	r9, 7
     7aa:	4c c0       	rjmp	.+152    	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     7ac:	46 01       	movw	r8, r12
     7ae:	d7 fe       	sbrs	r13, 7
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <vfprintf+0x2b2>
     7b2:	81 2c       	mov	r8, r1
     7b4:	91 2c       	mov	r9, r1
     7b6:	c6 01       	movw	r24, r12
     7b8:	88 19       	sub	r24, r8
     7ba:	99 09       	sbc	r25, r9
     7bc:	f3 01       	movw	r30, r6
     7be:	e8 0f       	add	r30, r24
     7c0:	f9 1f       	adc	r31, r25
     7c2:	fe 87       	std	Y+14, r31	; 0x0e
     7c4:	ed 87       	std	Y+13, r30	; 0x0d
     7c6:	96 01       	movw	r18, r12
     7c8:	24 19       	sub	r18, r4
     7ca:	31 09       	sbc	r19, r1
     7cc:	38 8b       	std	Y+16, r19	; 0x10
     7ce:	2f 87       	std	Y+15, r18	; 0x0f
     7d0:	01 2f       	mov	r16, r17
     7d2:	10 e0       	ldi	r17, 0x00	; 0
     7d4:	11 95       	neg	r17
     7d6:	01 95       	neg	r16
     7d8:	11 09       	sbc	r17, r1
     7da:	3f ef       	ldi	r19, 0xFF	; 255
     7dc:	83 16       	cp	r8, r19
     7de:	93 06       	cpc	r9, r19
     7e0:	29 f4       	brne	.+10     	; 0x7ec <vfprintf+0x2e8>
     7e2:	b7 01       	movw	r22, r14
     7e4:	8e e2       	ldi	r24, 0x2E	; 46
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     7ec:	c8 14       	cp	r12, r8
     7ee:	d9 04       	cpc	r13, r9
     7f0:	4c f0       	brlt	.+18     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7f2:	8f 85       	ldd	r24, Y+15	; 0x0f
     7f4:	98 89       	ldd	r25, Y+16	; 0x10
     7f6:	88 15       	cp	r24, r8
     7f8:	99 05       	cpc	r25, r9
     7fa:	24 f4       	brge	.+8      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7fc:	ed 85       	ldd	r30, Y+13	; 0x0d
     7fe:	fe 85       	ldd	r31, Y+14	; 0x0e
     800:	81 81       	ldd	r24, Z+1	; 0x01
     802:	01 c0       	rjmp	.+2      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     804:	80 e3       	ldi	r24, 0x30	; 48
     806:	f1 e0       	ldi	r31, 0x01	; 1
     808:	8f 1a       	sub	r8, r31
     80a:	91 08       	sbc	r9, r1
     80c:	2d 85       	ldd	r18, Y+13	; 0x0d
     80e:	3e 85       	ldd	r19, Y+14	; 0x0e
     810:	2f 5f       	subi	r18, 0xFF	; 255
     812:	3f 4f       	sbci	r19, 0xFF	; 255
     814:	3e 87       	std	Y+14, r19	; 0x0e
     816:	2d 87       	std	Y+13, r18	; 0x0d
     818:	80 16       	cp	r8, r16
     81a:	91 06       	cpc	r9, r17
     81c:	2c f0       	brlt	.+10     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     81e:	b7 01       	movw	r22, r14
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     826:	d9 cf       	rjmp	.-78     	; 0x7da <vfprintf+0x2d6>
     828:	c8 14       	cp	r12, r8
     82a:	d9 04       	cpc	r13, r9
     82c:	41 f4       	brne	.+16     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     82e:	9a 81       	ldd	r25, Y+2	; 0x02
     830:	96 33       	cpi	r25, 0x36	; 54
     832:	20 f4       	brcc	.+8      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     834:	95 33       	cpi	r25, 0x35	; 53
     836:	19 f4       	brne	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     838:	3c 85       	ldd	r19, Y+12	; 0x0c
     83a:	34 ff       	sbrs	r19, 4
     83c:	81 e3       	ldi	r24, 0x31	; 49
     83e:	b7 01       	movw	r22, r14
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	4e c0       	rjmp	.+156    	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
     844:	8a 81       	ldd	r24, Y+2	; 0x02
     846:	81 33       	cpi	r24, 0x31	; 49
     848:	19 f0       	breq	.+6      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     84a:	9c 85       	ldd	r25, Y+12	; 0x0c
     84c:	9f 7e       	andi	r25, 0xEF	; 239
     84e:	9c 87       	std	Y+12, r25	; 0x0c
     850:	b7 01       	movw	r22, r14
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     858:	11 11       	cpse	r17, r1
     85a:	05 c0       	rjmp	.+10     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     85c:	94 fc       	sbrc	r9, 4
     85e:	18 c0       	rjmp	.+48     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
     860:	85 e6       	ldi	r24, 0x65	; 101
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	17 c0       	rjmp	.+46     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
     866:	b7 01       	movw	r22, r14
     868:	8e e2       	ldi	r24, 0x2E	; 46
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     870:	1e 5f       	subi	r17, 0xFE	; 254
     872:	82 e0       	ldi	r24, 0x02	; 2
     874:	01 e0       	ldi	r16, 0x01	; 1
     876:	08 0f       	add	r16, r24
     878:	f3 01       	movw	r30, r6
     87a:	e8 0f       	add	r30, r24
     87c:	f1 1d       	adc	r31, r1
     87e:	80 81       	ld	r24, Z
     880:	b7 01       	movw	r22, r14
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     888:	80 2f       	mov	r24, r16
     88a:	01 13       	cpse	r16, r17
     88c:	f3 cf       	rjmp	.-26     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
     88e:	e6 cf       	rjmp	.-52     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     890:	85 e4       	ldi	r24, 0x45	; 69
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	b7 01       	movw	r22, r14
     896:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     89a:	d7 fc       	sbrc	r13, 7
     89c:	06 c0       	rjmp	.+12     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
     89e:	c1 14       	cp	r12, r1
     8a0:	d1 04       	cpc	r13, r1
     8a2:	41 f4       	brne	.+16     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8a4:	ec 85       	ldd	r30, Y+12	; 0x0c
     8a6:	e4 ff       	sbrs	r30, 4
     8a8:	05 c0       	rjmp	.+10     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8aa:	d1 94       	neg	r13
     8ac:	c1 94       	neg	r12
     8ae:	d1 08       	sbc	r13, r1
     8b0:	8d e2       	ldi	r24, 0x2D	; 45
     8b2:	01 c0       	rjmp	.+2      	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
     8b4:	8b e2       	ldi	r24, 0x2B	; 43
     8b6:	b7 01       	movw	r22, r14
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     8be:	80 e3       	ldi	r24, 0x30	; 48
     8c0:	2a e0       	ldi	r18, 0x0A	; 10
     8c2:	c2 16       	cp	r12, r18
     8c4:	d1 04       	cpc	r13, r1
     8c6:	2c f0       	brlt	.+10     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     8c8:	8f 5f       	subi	r24, 0xFF	; 255
     8ca:	fa e0       	ldi	r31, 0x0A	; 10
     8cc:	cf 1a       	sub	r12, r31
     8ce:	d1 08       	sbc	r13, r1
     8d0:	f7 cf       	rjmp	.-18     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     8d2:	b7 01       	movw	r22, r14
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     8da:	b7 01       	movw	r22, r14
     8dc:	c6 01       	movw	r24, r12
     8de:	c0 96       	adiw	r24, 0x30	; 48
     8e0:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     8e4:	54 c1       	rjmp	.+680    	; 0xb8e <__stack+0x28f>
     8e6:	83 36       	cpi	r24, 0x63	; 99
     8e8:	31 f0       	breq	.+12     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
     8ea:	83 37       	cpi	r24, 0x73	; 115
     8ec:	79 f0       	breq	.+30     	; 0x90c <__stack+0xd>
     8ee:	83 35       	cpi	r24, 0x53	; 83
     8f0:	09 f0       	breq	.+2      	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
     8f2:	56 c0       	rjmp	.+172    	; 0x9a0 <__stack+0xa1>
     8f4:	20 c0       	rjmp	.+64     	; 0x936 <__stack+0x37>
     8f6:	56 01       	movw	r10, r12
     8f8:	32 e0       	ldi	r19, 0x02	; 2
     8fa:	a3 0e       	add	r10, r19
     8fc:	b1 1c       	adc	r11, r1
     8fe:	f6 01       	movw	r30, r12
     900:	80 81       	ld	r24, Z
     902:	89 83       	std	Y+1, r24	; 0x01
     904:	01 e0       	ldi	r16, 0x01	; 1
     906:	10 e0       	ldi	r17, 0x00	; 0
     908:	63 01       	movw	r12, r6
     90a:	12 c0       	rjmp	.+36     	; 0x930 <__stack+0x31>
     90c:	56 01       	movw	r10, r12
     90e:	f2 e0       	ldi	r31, 0x02	; 2
     910:	af 0e       	add	r10, r31
     912:	b1 1c       	adc	r11, r1
     914:	f6 01       	movw	r30, r12
     916:	c0 80       	ld	r12, Z
     918:	d1 80       	ldd	r13, Z+1	; 0x01
     91a:	96 fe       	sbrs	r9, 6
     91c:	03 c0       	rjmp	.+6      	; 0x924 <__stack+0x25>
     91e:	61 2f       	mov	r22, r17
     920:	70 e0       	ldi	r23, 0x00	; 0
     922:	02 c0       	rjmp	.+4      	; 0x928 <__stack+0x29>
     924:	6f ef       	ldi	r22, 0xFF	; 255
     926:	7f ef       	ldi	r23, 0xFF	; 255
     928:	c6 01       	movw	r24, r12
     92a:	0e 94 3b 07 	call	0xe76	; 0xe76 <strnlen>
     92e:	8c 01       	movw	r16, r24
     930:	f9 2d       	mov	r31, r9
     932:	ff 77       	andi	r31, 0x7F	; 127
     934:	14 c0       	rjmp	.+40     	; 0x95e <__stack+0x5f>
     936:	56 01       	movw	r10, r12
     938:	22 e0       	ldi	r18, 0x02	; 2
     93a:	a2 0e       	add	r10, r18
     93c:	b1 1c       	adc	r11, r1
     93e:	f6 01       	movw	r30, r12
     940:	c0 80       	ld	r12, Z
     942:	d1 80       	ldd	r13, Z+1	; 0x01
     944:	96 fe       	sbrs	r9, 6
     946:	03 c0       	rjmp	.+6      	; 0x94e <__stack+0x4f>
     948:	61 2f       	mov	r22, r17
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	02 c0       	rjmp	.+4      	; 0x952 <__stack+0x53>
     94e:	6f ef       	ldi	r22, 0xFF	; 255
     950:	7f ef       	ldi	r23, 0xFF	; 255
     952:	c6 01       	movw	r24, r12
     954:	0e 94 30 07 	call	0xe60	; 0xe60 <strnlen_P>
     958:	8c 01       	movw	r16, r24
     95a:	f9 2d       	mov	r31, r9
     95c:	f0 68       	ori	r31, 0x80	; 128
     95e:	9f 2e       	mov	r9, r31
     960:	f3 fd       	sbrc	r31, 3
     962:	1a c0       	rjmp	.+52     	; 0x998 <__stack+0x99>
     964:	85 2d       	mov	r24, r5
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	08 17       	cp	r16, r24
     96a:	19 07       	cpc	r17, r25
     96c:	a8 f4       	brcc	.+42     	; 0x998 <__stack+0x99>
     96e:	b7 01       	movw	r22, r14
     970:	80 e2       	ldi	r24, 0x20	; 32
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     978:	5a 94       	dec	r5
     97a:	f4 cf       	rjmp	.-24     	; 0x964 <__stack+0x65>
     97c:	f6 01       	movw	r30, r12
     97e:	97 fc       	sbrc	r9, 7
     980:	85 91       	lpm	r24, Z+
     982:	97 fe       	sbrs	r9, 7
     984:	81 91       	ld	r24, Z+
     986:	6f 01       	movw	r12, r30
     988:	b7 01       	movw	r22, r14
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     990:	51 10       	cpse	r5, r1
     992:	5a 94       	dec	r5
     994:	01 50       	subi	r16, 0x01	; 1
     996:	11 09       	sbc	r17, r1
     998:	01 15       	cp	r16, r1
     99a:	11 05       	cpc	r17, r1
     99c:	79 f7       	brne	.-34     	; 0x97c <__stack+0x7d>
     99e:	f7 c0       	rjmp	.+494    	; 0xb8e <__stack+0x28f>
     9a0:	84 36       	cpi	r24, 0x64	; 100
     9a2:	11 f0       	breq	.+4      	; 0x9a8 <__stack+0xa9>
     9a4:	89 36       	cpi	r24, 0x69	; 105
     9a6:	61 f5       	brne	.+88     	; 0xa00 <__stack+0x101>
     9a8:	56 01       	movw	r10, r12
     9aa:	97 fe       	sbrs	r9, 7
     9ac:	09 c0       	rjmp	.+18     	; 0x9c0 <__stack+0xc1>
     9ae:	24 e0       	ldi	r18, 0x04	; 4
     9b0:	a2 0e       	add	r10, r18
     9b2:	b1 1c       	adc	r11, r1
     9b4:	f6 01       	movw	r30, r12
     9b6:	60 81       	ld	r22, Z
     9b8:	71 81       	ldd	r23, Z+1	; 0x01
     9ba:	82 81       	ldd	r24, Z+2	; 0x02
     9bc:	93 81       	ldd	r25, Z+3	; 0x03
     9be:	0a c0       	rjmp	.+20     	; 0x9d4 <__stack+0xd5>
     9c0:	f2 e0       	ldi	r31, 0x02	; 2
     9c2:	af 0e       	add	r10, r31
     9c4:	b1 1c       	adc	r11, r1
     9c6:	f6 01       	movw	r30, r12
     9c8:	60 81       	ld	r22, Z
     9ca:	71 81       	ldd	r23, Z+1	; 0x01
     9cc:	07 2e       	mov	r0, r23
     9ce:	00 0c       	add	r0, r0
     9d0:	88 0b       	sbc	r24, r24
     9d2:	99 0b       	sbc	r25, r25
     9d4:	f9 2d       	mov	r31, r9
     9d6:	ff 76       	andi	r31, 0x6F	; 111
     9d8:	9f 2e       	mov	r9, r31
     9da:	97 ff       	sbrs	r25, 7
     9dc:	09 c0       	rjmp	.+18     	; 0x9f0 <__stack+0xf1>
     9de:	90 95       	com	r25
     9e0:	80 95       	com	r24
     9e2:	70 95       	com	r23
     9e4:	61 95       	neg	r22
     9e6:	7f 4f       	sbci	r23, 0xFF	; 255
     9e8:	8f 4f       	sbci	r24, 0xFF	; 255
     9ea:	9f 4f       	sbci	r25, 0xFF	; 255
     9ec:	f0 68       	ori	r31, 0x80	; 128
     9ee:	9f 2e       	mov	r9, r31
     9f0:	2a e0       	ldi	r18, 0x0A	; 10
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	a3 01       	movw	r20, r6
     9f6:	0e 94 ae 07 	call	0xf5c	; 0xf5c <__ultoa_invert>
     9fa:	c8 2e       	mov	r12, r24
     9fc:	c6 18       	sub	r12, r6
     9fe:	3f c0       	rjmp	.+126    	; 0xa7e <__stack+0x17f>
     a00:	09 2d       	mov	r16, r9
     a02:	85 37       	cpi	r24, 0x75	; 117
     a04:	21 f4       	brne	.+8      	; 0xa0e <__stack+0x10f>
     a06:	0f 7e       	andi	r16, 0xEF	; 239
     a08:	2a e0       	ldi	r18, 0x0A	; 10
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	1d c0       	rjmp	.+58     	; 0xa48 <__stack+0x149>
     a0e:	09 7f       	andi	r16, 0xF9	; 249
     a10:	8f 36       	cpi	r24, 0x6F	; 111
     a12:	91 f0       	breq	.+36     	; 0xa38 <__stack+0x139>
     a14:	18 f4       	brcc	.+6      	; 0xa1c <__stack+0x11d>
     a16:	88 35       	cpi	r24, 0x58	; 88
     a18:	59 f0       	breq	.+22     	; 0xa30 <__stack+0x131>
     a1a:	c3 c0       	rjmp	.+390    	; 0xba2 <__stack+0x2a3>
     a1c:	80 37       	cpi	r24, 0x70	; 112
     a1e:	19 f0       	breq	.+6      	; 0xa26 <__stack+0x127>
     a20:	88 37       	cpi	r24, 0x78	; 120
     a22:	11 f0       	breq	.+4      	; 0xa28 <__stack+0x129>
     a24:	be c0       	rjmp	.+380    	; 0xba2 <__stack+0x2a3>
     a26:	00 61       	ori	r16, 0x10	; 16
     a28:	04 ff       	sbrs	r16, 4
     a2a:	09 c0       	rjmp	.+18     	; 0xa3e <__stack+0x13f>
     a2c:	04 60       	ori	r16, 0x04	; 4
     a2e:	07 c0       	rjmp	.+14     	; 0xa3e <__stack+0x13f>
     a30:	94 fe       	sbrs	r9, 4
     a32:	08 c0       	rjmp	.+16     	; 0xa44 <__stack+0x145>
     a34:	06 60       	ori	r16, 0x06	; 6
     a36:	06 c0       	rjmp	.+12     	; 0xa44 <__stack+0x145>
     a38:	28 e0       	ldi	r18, 0x08	; 8
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	05 c0       	rjmp	.+10     	; 0xa48 <__stack+0x149>
     a3e:	20 e1       	ldi	r18, 0x10	; 16
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	02 c0       	rjmp	.+4      	; 0xa48 <__stack+0x149>
     a44:	20 e1       	ldi	r18, 0x10	; 16
     a46:	32 e0       	ldi	r19, 0x02	; 2
     a48:	56 01       	movw	r10, r12
     a4a:	07 ff       	sbrs	r16, 7
     a4c:	09 c0       	rjmp	.+18     	; 0xa60 <__stack+0x161>
     a4e:	84 e0       	ldi	r24, 0x04	; 4
     a50:	a8 0e       	add	r10, r24
     a52:	b1 1c       	adc	r11, r1
     a54:	f6 01       	movw	r30, r12
     a56:	60 81       	ld	r22, Z
     a58:	71 81       	ldd	r23, Z+1	; 0x01
     a5a:	82 81       	ldd	r24, Z+2	; 0x02
     a5c:	93 81       	ldd	r25, Z+3	; 0x03
     a5e:	08 c0       	rjmp	.+16     	; 0xa70 <__stack+0x171>
     a60:	f2 e0       	ldi	r31, 0x02	; 2
     a62:	af 0e       	add	r10, r31
     a64:	b1 1c       	adc	r11, r1
     a66:	f6 01       	movw	r30, r12
     a68:	60 81       	ld	r22, Z
     a6a:	71 81       	ldd	r23, Z+1	; 0x01
     a6c:	80 e0       	ldi	r24, 0x00	; 0
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	a3 01       	movw	r20, r6
     a72:	0e 94 ae 07 	call	0xf5c	; 0xf5c <__ultoa_invert>
     a76:	c8 2e       	mov	r12, r24
     a78:	c6 18       	sub	r12, r6
     a7a:	0f 77       	andi	r16, 0x7F	; 127
     a7c:	90 2e       	mov	r9, r16
     a7e:	96 fe       	sbrs	r9, 6
     a80:	0b c0       	rjmp	.+22     	; 0xa98 <__stack+0x199>
     a82:	09 2d       	mov	r16, r9
     a84:	0e 7f       	andi	r16, 0xFE	; 254
     a86:	c1 16       	cp	r12, r17
     a88:	50 f4       	brcc	.+20     	; 0xa9e <__stack+0x19f>
     a8a:	94 fe       	sbrs	r9, 4
     a8c:	0a c0       	rjmp	.+20     	; 0xaa2 <__stack+0x1a3>
     a8e:	92 fc       	sbrc	r9, 2
     a90:	08 c0       	rjmp	.+16     	; 0xaa2 <__stack+0x1a3>
     a92:	09 2d       	mov	r16, r9
     a94:	0e 7e       	andi	r16, 0xEE	; 238
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <__stack+0x1a3>
     a98:	dc 2c       	mov	r13, r12
     a9a:	09 2d       	mov	r16, r9
     a9c:	03 c0       	rjmp	.+6      	; 0xaa4 <__stack+0x1a5>
     a9e:	dc 2c       	mov	r13, r12
     aa0:	01 c0       	rjmp	.+2      	; 0xaa4 <__stack+0x1a5>
     aa2:	d1 2e       	mov	r13, r17
     aa4:	04 ff       	sbrs	r16, 4
     aa6:	0d c0       	rjmp	.+26     	; 0xac2 <__stack+0x1c3>
     aa8:	fe 01       	movw	r30, r28
     aaa:	ec 0d       	add	r30, r12
     aac:	f1 1d       	adc	r31, r1
     aae:	80 81       	ld	r24, Z
     ab0:	80 33       	cpi	r24, 0x30	; 48
     ab2:	11 f4       	brne	.+4      	; 0xab8 <__stack+0x1b9>
     ab4:	09 7e       	andi	r16, 0xE9	; 233
     ab6:	09 c0       	rjmp	.+18     	; 0xaca <__stack+0x1cb>
     ab8:	02 ff       	sbrs	r16, 2
     aba:	06 c0       	rjmp	.+12     	; 0xac8 <__stack+0x1c9>
     abc:	d3 94       	inc	r13
     abe:	d3 94       	inc	r13
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <__stack+0x1cb>
     ac2:	80 2f       	mov	r24, r16
     ac4:	86 78       	andi	r24, 0x86	; 134
     ac6:	09 f0       	breq	.+2      	; 0xaca <__stack+0x1cb>
     ac8:	d3 94       	inc	r13
     aca:	03 fd       	sbrc	r16, 3
     acc:	11 c0       	rjmp	.+34     	; 0xaf0 <__stack+0x1f1>
     ace:	00 ff       	sbrs	r16, 0
     ad0:	06 c0       	rjmp	.+12     	; 0xade <__stack+0x1df>
     ad2:	1c 2d       	mov	r17, r12
     ad4:	d5 14       	cp	r13, r5
     ad6:	80 f4       	brcc	.+32     	; 0xaf8 <__stack+0x1f9>
     ad8:	15 0d       	add	r17, r5
     ada:	1d 19       	sub	r17, r13
     adc:	0d c0       	rjmp	.+26     	; 0xaf8 <__stack+0x1f9>
     ade:	d5 14       	cp	r13, r5
     ae0:	58 f4       	brcc	.+22     	; 0xaf8 <__stack+0x1f9>
     ae2:	b7 01       	movw	r22, r14
     ae4:	80 e2       	ldi	r24, 0x20	; 32
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     aec:	d3 94       	inc	r13
     aee:	f7 cf       	rjmp	.-18     	; 0xade <__stack+0x1df>
     af0:	d5 14       	cp	r13, r5
     af2:	10 f4       	brcc	.+4      	; 0xaf8 <__stack+0x1f9>
     af4:	5d 18       	sub	r5, r13
     af6:	01 c0       	rjmp	.+2      	; 0xafa <__stack+0x1fb>
     af8:	51 2c       	mov	r5, r1
     afa:	04 ff       	sbrs	r16, 4
     afc:	10 c0       	rjmp	.+32     	; 0xb1e <__stack+0x21f>
     afe:	b7 01       	movw	r22, r14
     b00:	80 e3       	ldi	r24, 0x30	; 48
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     b08:	02 ff       	sbrs	r16, 2
     b0a:	17 c0       	rjmp	.+46     	; 0xb3a <__stack+0x23b>
     b0c:	01 fd       	sbrc	r16, 1
     b0e:	03 c0       	rjmp	.+6      	; 0xb16 <__stack+0x217>
     b10:	88 e7       	ldi	r24, 0x78	; 120
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	02 c0       	rjmp	.+4      	; 0xb1a <__stack+0x21b>
     b16:	88 e5       	ldi	r24, 0x58	; 88
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	b7 01       	movw	r22, r14
     b1c:	0c c0       	rjmp	.+24     	; 0xb36 <__stack+0x237>
     b1e:	80 2f       	mov	r24, r16
     b20:	86 78       	andi	r24, 0x86	; 134
     b22:	59 f0       	breq	.+22     	; 0xb3a <__stack+0x23b>
     b24:	01 ff       	sbrs	r16, 1
     b26:	02 c0       	rjmp	.+4      	; 0xb2c <__stack+0x22d>
     b28:	8b e2       	ldi	r24, 0x2B	; 43
     b2a:	01 c0       	rjmp	.+2      	; 0xb2e <__stack+0x22f>
     b2c:	80 e2       	ldi	r24, 0x20	; 32
     b2e:	07 fd       	sbrc	r16, 7
     b30:	8d e2       	ldi	r24, 0x2D	; 45
     b32:	b7 01       	movw	r22, r14
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     b3a:	c1 16       	cp	r12, r17
     b3c:	38 f4       	brcc	.+14     	; 0xb4c <__stack+0x24d>
     b3e:	b7 01       	movw	r22, r14
     b40:	80 e3       	ldi	r24, 0x30	; 48
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     b48:	11 50       	subi	r17, 0x01	; 1
     b4a:	f7 cf       	rjmp	.-18     	; 0xb3a <__stack+0x23b>
     b4c:	ca 94       	dec	r12
     b4e:	f3 01       	movw	r30, r6
     b50:	ec 0d       	add	r30, r12
     b52:	f1 1d       	adc	r31, r1
     b54:	80 81       	ld	r24, Z
     b56:	b7 01       	movw	r22, r14
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     b5e:	c1 10       	cpse	r12, r1
     b60:	f5 cf       	rjmp	.-22     	; 0xb4c <__stack+0x24d>
     b62:	15 c0       	rjmp	.+42     	; 0xb8e <__stack+0x28f>
     b64:	f4 e0       	ldi	r31, 0x04	; 4
     b66:	f5 15       	cp	r31, r5
     b68:	60 f5       	brcc	.+88     	; 0xbc2 <__stack+0x2c3>
     b6a:	84 e0       	ldi	r24, 0x04	; 4
     b6c:	58 1a       	sub	r5, r24
     b6e:	93 fe       	sbrs	r9, 3
     b70:	1f c0       	rjmp	.+62     	; 0xbb0 <__stack+0x2b1>
     b72:	01 11       	cpse	r16, r1
     b74:	27 c0       	rjmp	.+78     	; 0xbc4 <__stack+0x2c5>
     b76:	2c 85       	ldd	r18, Y+12	; 0x0c
     b78:	23 ff       	sbrs	r18, 3
     b7a:	2a c0       	rjmp	.+84     	; 0xbd0 <__stack+0x2d1>
     b7c:	08 e6       	ldi	r16, 0x68	; 104
     b7e:	10 e0       	ldi	r17, 0x00	; 0
     b80:	39 2d       	mov	r19, r9
     b82:	30 71       	andi	r19, 0x10	; 16
     b84:	93 2e       	mov	r9, r19
     b86:	f8 01       	movw	r30, r16
     b88:	84 91       	lpm	r24, Z
     b8a:	81 11       	cpse	r24, r1
     b8c:	24 c0       	rjmp	.+72     	; 0xbd6 <__stack+0x2d7>
     b8e:	55 20       	and	r5, r5
     b90:	09 f4       	brne	.+2      	; 0xb94 <__stack+0x295>
     b92:	e4 cc       	rjmp	.-1592   	; 0x55c <vfprintf+0x58>
     b94:	b7 01       	movw	r22, r14
     b96:	80 e2       	ldi	r24, 0x20	; 32
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     b9e:	5a 94       	dec	r5
     ba0:	f6 cf       	rjmp	.-20     	; 0xb8e <__stack+0x28f>
     ba2:	f7 01       	movw	r30, r14
     ba4:	86 81       	ldd	r24, Z+6	; 0x06
     ba6:	97 81       	ldd	r25, Z+7	; 0x07
     ba8:	26 c0       	rjmp	.+76     	; 0xbf6 <__stack+0x2f7>
     baa:	8f ef       	ldi	r24, 0xFF	; 255
     bac:	9f ef       	ldi	r25, 0xFF	; 255
     bae:	23 c0       	rjmp	.+70     	; 0xbf6 <__stack+0x2f7>
     bb0:	b7 01       	movw	r22, r14
     bb2:	80 e2       	ldi	r24, 0x20	; 32
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     bba:	5a 94       	dec	r5
     bbc:	51 10       	cpse	r5, r1
     bbe:	f8 cf       	rjmp	.-16     	; 0xbb0 <__stack+0x2b1>
     bc0:	d8 cf       	rjmp	.-80     	; 0xb72 <__stack+0x273>
     bc2:	51 2c       	mov	r5, r1
     bc4:	b7 01       	movw	r22, r14
     bc6:	80 2f       	mov	r24, r16
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     bce:	d3 cf       	rjmp	.-90     	; 0xb76 <__stack+0x277>
     bd0:	0c e6       	ldi	r16, 0x6C	; 108
     bd2:	10 e0       	ldi	r17, 0x00	; 0
     bd4:	d5 cf       	rjmp	.-86     	; 0xb80 <__stack+0x281>
     bd6:	91 10       	cpse	r9, r1
     bd8:	80 52       	subi	r24, 0x20	; 32
     bda:	b7 01       	movw	r22, r14
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	0e 94 46 07 	call	0xe8c	; 0xe8c <fputc>
     be2:	0f 5f       	subi	r16, 0xFF	; 255
     be4:	1f 4f       	sbci	r17, 0xFF	; 255
     be6:	cf cf       	rjmp	.-98     	; 0xb86 <__stack+0x287>
     be8:	23 e0       	ldi	r18, 0x03	; 3
     bea:	25 15       	cp	r18, r5
     bec:	10 f4       	brcc	.+4      	; 0xbf2 <__stack+0x2f3>
     bee:	83 e0       	ldi	r24, 0x03	; 3
     bf0:	bd cf       	rjmp	.-134    	; 0xb6c <__stack+0x26d>
     bf2:	51 2c       	mov	r5, r1
     bf4:	c0 cf       	rjmp	.-128    	; 0xb76 <__stack+0x277>
     bf6:	60 96       	adiw	r28, 0x10	; 16
     bf8:	e2 e1       	ldi	r30, 0x12	; 18
     bfa:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__epilogue_restores__>

00000bfe <__udivmodsi4>:
     bfe:	a1 e2       	ldi	r26, 0x21	; 33
     c00:	1a 2e       	mov	r1, r26
     c02:	aa 1b       	sub	r26, r26
     c04:	bb 1b       	sub	r27, r27
     c06:	fd 01       	movw	r30, r26
     c08:	0d c0       	rjmp	.+26     	; 0xc24 <__udivmodsi4_ep>

00000c0a <__udivmodsi4_loop>:
     c0a:	aa 1f       	adc	r26, r26
     c0c:	bb 1f       	adc	r27, r27
     c0e:	ee 1f       	adc	r30, r30
     c10:	ff 1f       	adc	r31, r31
     c12:	a2 17       	cp	r26, r18
     c14:	b3 07       	cpc	r27, r19
     c16:	e4 07       	cpc	r30, r20
     c18:	f5 07       	cpc	r31, r21
     c1a:	20 f0       	brcs	.+8      	; 0xc24 <__udivmodsi4_ep>
     c1c:	a2 1b       	sub	r26, r18
     c1e:	b3 0b       	sbc	r27, r19
     c20:	e4 0b       	sbc	r30, r20
     c22:	f5 0b       	sbc	r31, r21

00000c24 <__udivmodsi4_ep>:
     c24:	66 1f       	adc	r22, r22
     c26:	77 1f       	adc	r23, r23
     c28:	88 1f       	adc	r24, r24
     c2a:	99 1f       	adc	r25, r25
     c2c:	1a 94       	dec	r1
     c2e:	69 f7       	brne	.-38     	; 0xc0a <__udivmodsi4_loop>
     c30:	60 95       	com	r22
     c32:	70 95       	com	r23
     c34:	80 95       	com	r24
     c36:	90 95       	com	r25
     c38:	9b 01       	movw	r18, r22
     c3a:	ac 01       	movw	r20, r24
     c3c:	bd 01       	movw	r22, r26
     c3e:	cf 01       	movw	r24, r30
     c40:	08 95       	ret

00000c42 <__prologue_saves__>:
     c42:	2f 92       	push	r2
     c44:	3f 92       	push	r3
     c46:	4f 92       	push	r4
     c48:	5f 92       	push	r5
     c4a:	6f 92       	push	r6
     c4c:	7f 92       	push	r7
     c4e:	8f 92       	push	r8
     c50:	9f 92       	push	r9
     c52:	af 92       	push	r10
     c54:	bf 92       	push	r11
     c56:	cf 92       	push	r12
     c58:	df 92       	push	r13
     c5a:	ef 92       	push	r14
     c5c:	ff 92       	push	r15
     c5e:	0f 93       	push	r16
     c60:	1f 93       	push	r17
     c62:	cf 93       	push	r28
     c64:	df 93       	push	r29
     c66:	cd b7       	in	r28, 0x3d	; 61
     c68:	de b7       	in	r29, 0x3e	; 62
     c6a:	ca 1b       	sub	r28, r26
     c6c:	db 0b       	sbc	r29, r27
     c6e:	0f b6       	in	r0, 0x3f	; 63
     c70:	f8 94       	cli
     c72:	de bf       	out	0x3e, r29	; 62
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	cd bf       	out	0x3d, r28	; 61
     c78:	09 94       	ijmp

00000c7a <__epilogue_restores__>:
     c7a:	2a 88       	ldd	r2, Y+18	; 0x12
     c7c:	39 88       	ldd	r3, Y+17	; 0x11
     c7e:	48 88       	ldd	r4, Y+16	; 0x10
     c80:	5f 84       	ldd	r5, Y+15	; 0x0f
     c82:	6e 84       	ldd	r6, Y+14	; 0x0e
     c84:	7d 84       	ldd	r7, Y+13	; 0x0d
     c86:	8c 84       	ldd	r8, Y+12	; 0x0c
     c88:	9b 84       	ldd	r9, Y+11	; 0x0b
     c8a:	aa 84       	ldd	r10, Y+10	; 0x0a
     c8c:	b9 84       	ldd	r11, Y+9	; 0x09
     c8e:	c8 84       	ldd	r12, Y+8	; 0x08
     c90:	df 80       	ldd	r13, Y+7	; 0x07
     c92:	ee 80       	ldd	r14, Y+6	; 0x06
     c94:	fd 80       	ldd	r15, Y+5	; 0x05
     c96:	0c 81       	ldd	r16, Y+4	; 0x04
     c98:	1b 81       	ldd	r17, Y+3	; 0x03
     c9a:	aa 81       	ldd	r26, Y+2	; 0x02
     c9c:	b9 81       	ldd	r27, Y+1	; 0x01
     c9e:	ce 0f       	add	r28, r30
     ca0:	d1 1d       	adc	r29, r1
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	f8 94       	cli
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	cd bf       	out	0x3d, r28	; 61
     cac:	ed 01       	movw	r28, r26
     cae:	08 95       	ret

00000cb0 <__ftoa_engine>:
     cb0:	28 30       	cpi	r18, 0x08	; 8
     cb2:	08 f0       	brcs	.+2      	; 0xcb6 <__ftoa_engine+0x6>
     cb4:	27 e0       	ldi	r18, 0x07	; 7
     cb6:	33 27       	eor	r19, r19
     cb8:	da 01       	movw	r26, r20
     cba:	99 0f       	add	r25, r25
     cbc:	31 1d       	adc	r19, r1
     cbe:	87 fd       	sbrc	r24, 7
     cc0:	91 60       	ori	r25, 0x01	; 1
     cc2:	00 96       	adiw	r24, 0x00	; 0
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	39 f4       	brne	.+14     	; 0xcd8 <__ftoa_engine+0x28>
     cca:	32 60       	ori	r19, 0x02	; 2
     ccc:	2e 5f       	subi	r18, 0xFE	; 254
     cce:	3d 93       	st	X+, r19
     cd0:	30 e3       	ldi	r19, 0x30	; 48
     cd2:	2a 95       	dec	r18
     cd4:	e1 f7       	brne	.-8      	; 0xcce <__ftoa_engine+0x1e>
     cd6:	08 95       	ret
     cd8:	9f 3f       	cpi	r25, 0xFF	; 255
     cda:	30 f0       	brcs	.+12     	; 0xce8 <__ftoa_engine+0x38>
     cdc:	80 38       	cpi	r24, 0x80	; 128
     cde:	71 05       	cpc	r23, r1
     ce0:	61 05       	cpc	r22, r1
     ce2:	09 f0       	breq	.+2      	; 0xce6 <__ftoa_engine+0x36>
     ce4:	3c 5f       	subi	r19, 0xFC	; 252
     ce6:	3c 5f       	subi	r19, 0xFC	; 252
     ce8:	3d 93       	st	X+, r19
     cea:	91 30       	cpi	r25, 0x01	; 1
     cec:	08 f0       	brcs	.+2      	; 0xcf0 <__ftoa_engine+0x40>
     cee:	80 68       	ori	r24, 0x80	; 128
     cf0:	91 1d       	adc	r25, r1
     cf2:	df 93       	push	r29
     cf4:	cf 93       	push	r28
     cf6:	1f 93       	push	r17
     cf8:	0f 93       	push	r16
     cfa:	ff 92       	push	r15
     cfc:	ef 92       	push	r14
     cfe:	19 2f       	mov	r17, r25
     d00:	98 7f       	andi	r25, 0xF8	; 248
     d02:	96 95       	lsr	r25
     d04:	e9 2f       	mov	r30, r25
     d06:	96 95       	lsr	r25
     d08:	96 95       	lsr	r25
     d0a:	e9 0f       	add	r30, r25
     d0c:	ff 27       	eor	r31, r31
     d0e:	e6 53       	subi	r30, 0x36	; 54
     d10:	ff 4f       	sbci	r31, 0xFF	; 255
     d12:	99 27       	eor	r25, r25
     d14:	33 27       	eor	r19, r19
     d16:	ee 24       	eor	r14, r14
     d18:	ff 24       	eor	r15, r15
     d1a:	a7 01       	movw	r20, r14
     d1c:	e7 01       	movw	r28, r14
     d1e:	05 90       	lpm	r0, Z+
     d20:	08 94       	sec
     d22:	07 94       	ror	r0
     d24:	28 f4       	brcc	.+10     	; 0xd30 <__ftoa_engine+0x80>
     d26:	36 0f       	add	r19, r22
     d28:	e7 1e       	adc	r14, r23
     d2a:	f8 1e       	adc	r15, r24
     d2c:	49 1f       	adc	r20, r25
     d2e:	51 1d       	adc	r21, r1
     d30:	66 0f       	add	r22, r22
     d32:	77 1f       	adc	r23, r23
     d34:	88 1f       	adc	r24, r24
     d36:	99 1f       	adc	r25, r25
     d38:	06 94       	lsr	r0
     d3a:	a1 f7       	brne	.-24     	; 0xd24 <__ftoa_engine+0x74>
     d3c:	05 90       	lpm	r0, Z+
     d3e:	07 94       	ror	r0
     d40:	28 f4       	brcc	.+10     	; 0xd4c <__ftoa_engine+0x9c>
     d42:	e7 0e       	add	r14, r23
     d44:	f8 1e       	adc	r15, r24
     d46:	49 1f       	adc	r20, r25
     d48:	56 1f       	adc	r21, r22
     d4a:	c1 1d       	adc	r28, r1
     d4c:	77 0f       	add	r23, r23
     d4e:	88 1f       	adc	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	66 1f       	adc	r22, r22
     d54:	06 94       	lsr	r0
     d56:	a1 f7       	brne	.-24     	; 0xd40 <__ftoa_engine+0x90>
     d58:	05 90       	lpm	r0, Z+
     d5a:	07 94       	ror	r0
     d5c:	28 f4       	brcc	.+10     	; 0xd68 <__ftoa_engine+0xb8>
     d5e:	f8 0e       	add	r15, r24
     d60:	49 1f       	adc	r20, r25
     d62:	56 1f       	adc	r21, r22
     d64:	c7 1f       	adc	r28, r23
     d66:	d1 1d       	adc	r29, r1
     d68:	88 0f       	add	r24, r24
     d6a:	99 1f       	adc	r25, r25
     d6c:	66 1f       	adc	r22, r22
     d6e:	77 1f       	adc	r23, r23
     d70:	06 94       	lsr	r0
     d72:	a1 f7       	brne	.-24     	; 0xd5c <__ftoa_engine+0xac>
     d74:	05 90       	lpm	r0, Z+
     d76:	07 94       	ror	r0
     d78:	20 f4       	brcc	.+8      	; 0xd82 <__ftoa_engine+0xd2>
     d7a:	49 0f       	add	r20, r25
     d7c:	56 1f       	adc	r21, r22
     d7e:	c7 1f       	adc	r28, r23
     d80:	d8 1f       	adc	r29, r24
     d82:	99 0f       	add	r25, r25
     d84:	66 1f       	adc	r22, r22
     d86:	77 1f       	adc	r23, r23
     d88:	88 1f       	adc	r24, r24
     d8a:	06 94       	lsr	r0
     d8c:	a9 f7       	brne	.-22     	; 0xd78 <__ftoa_engine+0xc8>
     d8e:	84 91       	lpm	r24, Z
     d90:	10 95       	com	r17
     d92:	17 70       	andi	r17, 0x07	; 7
     d94:	41 f0       	breq	.+16     	; 0xda6 <__ftoa_engine+0xf6>
     d96:	d6 95       	lsr	r29
     d98:	c7 95       	ror	r28
     d9a:	57 95       	ror	r21
     d9c:	47 95       	ror	r20
     d9e:	f7 94       	ror	r15
     da0:	e7 94       	ror	r14
     da2:	1a 95       	dec	r17
     da4:	c1 f7       	brne	.-16     	; 0xd96 <__ftoa_engine+0xe6>
     da6:	e0 e7       	ldi	r30, 0x70	; 112
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	68 94       	set
     dac:	15 90       	lpm	r1, Z+
     dae:	15 91       	lpm	r17, Z+
     db0:	35 91       	lpm	r19, Z+
     db2:	65 91       	lpm	r22, Z+
     db4:	95 91       	lpm	r25, Z+
     db6:	05 90       	lpm	r0, Z+
     db8:	7f e2       	ldi	r23, 0x2F	; 47
     dba:	73 95       	inc	r23
     dbc:	e1 18       	sub	r14, r1
     dbe:	f1 0a       	sbc	r15, r17
     dc0:	43 0b       	sbc	r20, r19
     dc2:	56 0b       	sbc	r21, r22
     dc4:	c9 0b       	sbc	r28, r25
     dc6:	d0 09       	sbc	r29, r0
     dc8:	c0 f7       	brcc	.-16     	; 0xdba <__ftoa_engine+0x10a>
     dca:	e1 0c       	add	r14, r1
     dcc:	f1 1e       	adc	r15, r17
     dce:	43 1f       	adc	r20, r19
     dd0:	56 1f       	adc	r21, r22
     dd2:	c9 1f       	adc	r28, r25
     dd4:	d0 1d       	adc	r29, r0
     dd6:	7e f4       	brtc	.+30     	; 0xdf6 <__ftoa_engine+0x146>
     dd8:	70 33       	cpi	r23, 0x30	; 48
     dda:	11 f4       	brne	.+4      	; 0xde0 <__ftoa_engine+0x130>
     ddc:	8a 95       	dec	r24
     dde:	e6 cf       	rjmp	.-52     	; 0xdac <__ftoa_engine+0xfc>
     de0:	e8 94       	clt
     de2:	01 50       	subi	r16, 0x01	; 1
     de4:	30 f0       	brcs	.+12     	; 0xdf2 <__ftoa_engine+0x142>
     de6:	08 0f       	add	r16, r24
     de8:	0a f4       	brpl	.+2      	; 0xdec <__ftoa_engine+0x13c>
     dea:	00 27       	eor	r16, r16
     dec:	02 17       	cp	r16, r18
     dee:	08 f4       	brcc	.+2      	; 0xdf2 <__ftoa_engine+0x142>
     df0:	20 2f       	mov	r18, r16
     df2:	23 95       	inc	r18
     df4:	02 2f       	mov	r16, r18
     df6:	7a 33       	cpi	r23, 0x3A	; 58
     df8:	28 f0       	brcs	.+10     	; 0xe04 <__ftoa_engine+0x154>
     dfa:	79 e3       	ldi	r23, 0x39	; 57
     dfc:	7d 93       	st	X+, r23
     dfe:	2a 95       	dec	r18
     e00:	e9 f7       	brne	.-6      	; 0xdfc <__ftoa_engine+0x14c>
     e02:	10 c0       	rjmp	.+32     	; 0xe24 <__ftoa_engine+0x174>
     e04:	7d 93       	st	X+, r23
     e06:	2a 95       	dec	r18
     e08:	89 f6       	brne	.-94     	; 0xdac <__ftoa_engine+0xfc>
     e0a:	06 94       	lsr	r0
     e0c:	97 95       	ror	r25
     e0e:	67 95       	ror	r22
     e10:	37 95       	ror	r19
     e12:	17 95       	ror	r17
     e14:	17 94       	ror	r1
     e16:	e1 18       	sub	r14, r1
     e18:	f1 0a       	sbc	r15, r17
     e1a:	43 0b       	sbc	r20, r19
     e1c:	56 0b       	sbc	r21, r22
     e1e:	c9 0b       	sbc	r28, r25
     e20:	d0 09       	sbc	r29, r0
     e22:	98 f0       	brcs	.+38     	; 0xe4a <__ftoa_engine+0x19a>
     e24:	23 95       	inc	r18
     e26:	7e 91       	ld	r23, -X
     e28:	73 95       	inc	r23
     e2a:	7a 33       	cpi	r23, 0x3A	; 58
     e2c:	08 f0       	brcs	.+2      	; 0xe30 <__ftoa_engine+0x180>
     e2e:	70 e3       	ldi	r23, 0x30	; 48
     e30:	7c 93       	st	X, r23
     e32:	20 13       	cpse	r18, r16
     e34:	b8 f7       	brcc	.-18     	; 0xe24 <__ftoa_engine+0x174>
     e36:	7e 91       	ld	r23, -X
     e38:	70 61       	ori	r23, 0x10	; 16
     e3a:	7d 93       	st	X+, r23
     e3c:	30 f0       	brcs	.+12     	; 0xe4a <__ftoa_engine+0x19a>
     e3e:	83 95       	inc	r24
     e40:	71 e3       	ldi	r23, 0x31	; 49
     e42:	7d 93       	st	X+, r23
     e44:	70 e3       	ldi	r23, 0x30	; 48
     e46:	2a 95       	dec	r18
     e48:	e1 f7       	brne	.-8      	; 0xe42 <__ftoa_engine+0x192>
     e4a:	11 24       	eor	r1, r1
     e4c:	ef 90       	pop	r14
     e4e:	ff 90       	pop	r15
     e50:	0f 91       	pop	r16
     e52:	1f 91       	pop	r17
     e54:	cf 91       	pop	r28
     e56:	df 91       	pop	r29
     e58:	99 27       	eor	r25, r25
     e5a:	87 fd       	sbrc	r24, 7
     e5c:	90 95       	com	r25
     e5e:	08 95       	ret

00000e60 <strnlen_P>:
     e60:	fc 01       	movw	r30, r24
     e62:	05 90       	lpm	r0, Z+
     e64:	61 50       	subi	r22, 0x01	; 1
     e66:	70 40       	sbci	r23, 0x00	; 0
     e68:	01 10       	cpse	r0, r1
     e6a:	d8 f7       	brcc	.-10     	; 0xe62 <strnlen_P+0x2>
     e6c:	80 95       	com	r24
     e6e:	90 95       	com	r25
     e70:	8e 0f       	add	r24, r30
     e72:	9f 1f       	adc	r25, r31
     e74:	08 95       	ret

00000e76 <strnlen>:
     e76:	fc 01       	movw	r30, r24
     e78:	61 50       	subi	r22, 0x01	; 1
     e7a:	70 40       	sbci	r23, 0x00	; 0
     e7c:	01 90       	ld	r0, Z+
     e7e:	01 10       	cpse	r0, r1
     e80:	d8 f7       	brcc	.-10     	; 0xe78 <strnlen+0x2>
     e82:	80 95       	com	r24
     e84:	90 95       	com	r25
     e86:	8e 0f       	add	r24, r30
     e88:	9f 1f       	adc	r25, r31
     e8a:	08 95       	ret

00000e8c <fputc>:
     e8c:	0f 93       	push	r16
     e8e:	1f 93       	push	r17
     e90:	cf 93       	push	r28
     e92:	df 93       	push	r29
     e94:	fb 01       	movw	r30, r22
     e96:	23 81       	ldd	r18, Z+3	; 0x03
     e98:	21 fd       	sbrc	r18, 1
     e9a:	03 c0       	rjmp	.+6      	; 0xea2 <fputc+0x16>
     e9c:	8f ef       	ldi	r24, 0xFF	; 255
     e9e:	9f ef       	ldi	r25, 0xFF	; 255
     ea0:	2c c0       	rjmp	.+88     	; 0xefa <fputc+0x6e>
     ea2:	22 ff       	sbrs	r18, 2
     ea4:	16 c0       	rjmp	.+44     	; 0xed2 <fputc+0x46>
     ea6:	46 81       	ldd	r20, Z+6	; 0x06
     ea8:	57 81       	ldd	r21, Z+7	; 0x07
     eaa:	24 81       	ldd	r18, Z+4	; 0x04
     eac:	35 81       	ldd	r19, Z+5	; 0x05
     eae:	42 17       	cp	r20, r18
     eb0:	53 07       	cpc	r21, r19
     eb2:	44 f4       	brge	.+16     	; 0xec4 <fputc+0x38>
     eb4:	a0 81       	ld	r26, Z
     eb6:	b1 81       	ldd	r27, Z+1	; 0x01
     eb8:	9d 01       	movw	r18, r26
     eba:	2f 5f       	subi	r18, 0xFF	; 255
     ebc:	3f 4f       	sbci	r19, 0xFF	; 255
     ebe:	31 83       	std	Z+1, r19	; 0x01
     ec0:	20 83       	st	Z, r18
     ec2:	8c 93       	st	X, r24
     ec4:	26 81       	ldd	r18, Z+6	; 0x06
     ec6:	37 81       	ldd	r19, Z+7	; 0x07
     ec8:	2f 5f       	subi	r18, 0xFF	; 255
     eca:	3f 4f       	sbci	r19, 0xFF	; 255
     ecc:	37 83       	std	Z+7, r19	; 0x07
     ece:	26 83       	std	Z+6, r18	; 0x06
     ed0:	14 c0       	rjmp	.+40     	; 0xefa <fputc+0x6e>
     ed2:	8b 01       	movw	r16, r22
     ed4:	ec 01       	movw	r28, r24
     ed6:	fb 01       	movw	r30, r22
     ed8:	00 84       	ldd	r0, Z+8	; 0x08
     eda:	f1 85       	ldd	r31, Z+9	; 0x09
     edc:	e0 2d       	mov	r30, r0
     ede:	09 95       	icall
     ee0:	89 2b       	or	r24, r25
     ee2:	e1 f6       	brne	.-72     	; 0xe9c <fputc+0x10>
     ee4:	d8 01       	movw	r26, r16
     ee6:	16 96       	adiw	r26, 0x06	; 6
     ee8:	8d 91       	ld	r24, X+
     eea:	9c 91       	ld	r25, X
     eec:	17 97       	sbiw	r26, 0x07	; 7
     eee:	01 96       	adiw	r24, 0x01	; 1
     ef0:	17 96       	adiw	r26, 0x07	; 7
     ef2:	9c 93       	st	X, r25
     ef4:	8e 93       	st	-X, r24
     ef6:	16 97       	sbiw	r26, 0x06	; 6
     ef8:	ce 01       	movw	r24, r28
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	08 95       	ret

00000f04 <vsnprintf>:
     f04:	ae e0       	ldi	r26, 0x0E	; 14
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e8 e8       	ldi	r30, 0x88	; 136
     f0a:	f7 e0       	ldi	r31, 0x07	; 7
     f0c:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__prologue_saves__+0x1c>
     f10:	8c 01       	movw	r16, r24
     f12:	fa 01       	movw	r30, r20
     f14:	86 e0       	ldi	r24, 0x06	; 6
     f16:	8c 83       	std	Y+4, r24	; 0x04
     f18:	1a 83       	std	Y+2, r17	; 0x02
     f1a:	09 83       	std	Y+1, r16	; 0x01
     f1c:	77 ff       	sbrs	r23, 7
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <vsnprintf+0x20>
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	70 e8       	ldi	r23, 0x80	; 128
     f24:	cb 01       	movw	r24, r22
     f26:	01 97       	sbiw	r24, 0x01	; 1
     f28:	9e 83       	std	Y+6, r25	; 0x06
     f2a:	8d 83       	std	Y+5, r24	; 0x05
     f2c:	a9 01       	movw	r20, r18
     f2e:	bf 01       	movw	r22, r30
     f30:	ce 01       	movw	r24, r28
     f32:	01 96       	adiw	r24, 0x01	; 1
     f34:	0e 94 82 02 	call	0x504	; 0x504 <vfprintf>
     f38:	4d 81       	ldd	r20, Y+5	; 0x05
     f3a:	5e 81       	ldd	r21, Y+6	; 0x06
     f3c:	57 fd       	sbrc	r21, 7
     f3e:	0a c0       	rjmp	.+20     	; 0xf54 <vsnprintf+0x50>
     f40:	2f 81       	ldd	r18, Y+7	; 0x07
     f42:	38 85       	ldd	r19, Y+8	; 0x08
     f44:	42 17       	cp	r20, r18
     f46:	53 07       	cpc	r21, r19
     f48:	0c f4       	brge	.+2      	; 0xf4c <vsnprintf+0x48>
     f4a:	9a 01       	movw	r18, r20
     f4c:	f8 01       	movw	r30, r16
     f4e:	e2 0f       	add	r30, r18
     f50:	f3 1f       	adc	r31, r19
     f52:	10 82       	st	Z, r1
     f54:	2e 96       	adiw	r28, 0x0e	; 14
     f56:	e4 e0       	ldi	r30, 0x04	; 4
     f58:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__epilogue_restores__+0x1c>

00000f5c <__ultoa_invert>:
     f5c:	fa 01       	movw	r30, r20
     f5e:	aa 27       	eor	r26, r26
     f60:	28 30       	cpi	r18, 0x08	; 8
     f62:	51 f1       	breq	.+84     	; 0xfb8 <__ultoa_invert+0x5c>
     f64:	20 31       	cpi	r18, 0x10	; 16
     f66:	81 f1       	breq	.+96     	; 0xfc8 <__ultoa_invert+0x6c>
     f68:	e8 94       	clt
     f6a:	6f 93       	push	r22
     f6c:	6e 7f       	andi	r22, 0xFE	; 254
     f6e:	6e 5f       	subi	r22, 0xFE	; 254
     f70:	7f 4f       	sbci	r23, 0xFF	; 255
     f72:	8f 4f       	sbci	r24, 0xFF	; 255
     f74:	9f 4f       	sbci	r25, 0xFF	; 255
     f76:	af 4f       	sbci	r26, 0xFF	; 255
     f78:	b1 e0       	ldi	r27, 0x01	; 1
     f7a:	3e d0       	rcall	.+124    	; 0xff8 <__ultoa_invert+0x9c>
     f7c:	b4 e0       	ldi	r27, 0x04	; 4
     f7e:	3c d0       	rcall	.+120    	; 0xff8 <__ultoa_invert+0x9c>
     f80:	67 0f       	add	r22, r23
     f82:	78 1f       	adc	r23, r24
     f84:	89 1f       	adc	r24, r25
     f86:	9a 1f       	adc	r25, r26
     f88:	a1 1d       	adc	r26, r1
     f8a:	68 0f       	add	r22, r24
     f8c:	79 1f       	adc	r23, r25
     f8e:	8a 1f       	adc	r24, r26
     f90:	91 1d       	adc	r25, r1
     f92:	a1 1d       	adc	r26, r1
     f94:	6a 0f       	add	r22, r26
     f96:	71 1d       	adc	r23, r1
     f98:	81 1d       	adc	r24, r1
     f9a:	91 1d       	adc	r25, r1
     f9c:	a1 1d       	adc	r26, r1
     f9e:	20 d0       	rcall	.+64     	; 0xfe0 <__ultoa_invert+0x84>
     fa0:	09 f4       	brne	.+2      	; 0xfa4 <__ultoa_invert+0x48>
     fa2:	68 94       	set
     fa4:	3f 91       	pop	r19
     fa6:	2a e0       	ldi	r18, 0x0A	; 10
     fa8:	26 9f       	mul	r18, r22
     faa:	11 24       	eor	r1, r1
     fac:	30 19       	sub	r19, r0
     fae:	30 5d       	subi	r19, 0xD0	; 208
     fb0:	31 93       	st	Z+, r19
     fb2:	de f6       	brtc	.-74     	; 0xf6a <__ultoa_invert+0xe>
     fb4:	cf 01       	movw	r24, r30
     fb6:	08 95       	ret
     fb8:	46 2f       	mov	r20, r22
     fba:	47 70       	andi	r20, 0x07	; 7
     fbc:	40 5d       	subi	r20, 0xD0	; 208
     fbe:	41 93       	st	Z+, r20
     fc0:	b3 e0       	ldi	r27, 0x03	; 3
     fc2:	0f d0       	rcall	.+30     	; 0xfe2 <__ultoa_invert+0x86>
     fc4:	c9 f7       	brne	.-14     	; 0xfb8 <__ultoa_invert+0x5c>
     fc6:	f6 cf       	rjmp	.-20     	; 0xfb4 <__ultoa_invert+0x58>
     fc8:	46 2f       	mov	r20, r22
     fca:	4f 70       	andi	r20, 0x0F	; 15
     fcc:	40 5d       	subi	r20, 0xD0	; 208
     fce:	4a 33       	cpi	r20, 0x3A	; 58
     fd0:	18 f0       	brcs	.+6      	; 0xfd8 <__ultoa_invert+0x7c>
     fd2:	49 5d       	subi	r20, 0xD9	; 217
     fd4:	31 fd       	sbrc	r19, 1
     fd6:	40 52       	subi	r20, 0x20	; 32
     fd8:	41 93       	st	Z+, r20
     fda:	02 d0       	rcall	.+4      	; 0xfe0 <__ultoa_invert+0x84>
     fdc:	a9 f7       	brne	.-22     	; 0xfc8 <__ultoa_invert+0x6c>
     fde:	ea cf       	rjmp	.-44     	; 0xfb4 <__ultoa_invert+0x58>
     fe0:	b4 e0       	ldi	r27, 0x04	; 4
     fe2:	a6 95       	lsr	r26
     fe4:	97 95       	ror	r25
     fe6:	87 95       	ror	r24
     fe8:	77 95       	ror	r23
     fea:	67 95       	ror	r22
     fec:	ba 95       	dec	r27
     fee:	c9 f7       	brne	.-14     	; 0xfe2 <__ultoa_invert+0x86>
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	61 05       	cpc	r22, r1
     ff4:	71 05       	cpc	r23, r1
     ff6:	08 95       	ret
     ff8:	9b 01       	movw	r18, r22
     ffa:	ac 01       	movw	r20, r24
     ffc:	0a 2e       	mov	r0, r26
     ffe:	06 94       	lsr	r0
    1000:	57 95       	ror	r21
    1002:	47 95       	ror	r20
    1004:	37 95       	ror	r19
    1006:	27 95       	ror	r18
    1008:	ba 95       	dec	r27
    100a:	c9 f7       	brne	.-14     	; 0xffe <__ultoa_invert+0xa2>
    100c:	62 0f       	add	r22, r18
    100e:	73 1f       	adc	r23, r19
    1010:	84 1f       	adc	r24, r20
    1012:	95 1f       	adc	r25, r21
    1014:	a0 1d       	adc	r26, r0
    1016:	08 95       	ret

00001018 <_exit>:
    1018:	f8 94       	cli

0000101a <__stop_program>:
    101a:	ff cf       	rjmp	.-2      	; 0x101a <__stop_program>
